C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 1   


C51 COMPILER V7.09, COMPILATION OF MODULE MCU
OBJECT MODULE PLACED IN mcu.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE mcu.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "vm.h"
   2          #include "mcu.h"
   3          #include "kernel.h"
   4          #include "error_code.h"
   5          #include "datastruct.h"
   6          #include "command_reactor.h"
   7          
   8          char bdata flag_key0;
   9          sbit f_key0_err                                         = flag_key0^0;          // ³öÏÖÖÐ¼äÖµ£¬ÓÐ¿ÉÄÜ³ö´í(Èç×éºÏ¼ü)     
  10          sbit f_key1_err                                         = flag_key0^1;          // ³öÏÖÖÐ¼äÖµ£¬ÓÐ¿ÉÄÜ³ö´í(Èç×éºÏ¼ü)     
  11          sbit f_manual                                           = flag_key0^2;          // ÊÖ¶¯Ä£Ê½£¨¸Ã±êÖ¾Î»²»²ÎÓë¿ØÖÆ£¬Ö»ÎªÒÔºóÏÔÊ¾ÓÃ£©
  12          sbit f_key0_ed                                          = flag_key0^3;          // Ä£ÄâÊäÈë 0 Ò»´ÎÓÐÐ§ÊäÈë
  13          sbit f_key1_ed                                          = flag_key0^4;          // Ä£ÄâÊäÈë 1 Ò»´ÎÓÐÐ§ÊäÈë
  14          sbit f_key2_ed                                          = flag_key0^5;          // Ä£ÄâÊäÈë 2 Ò»´ÎÓÐÐ§ÊäÈë
  15          sbit f_key3_ed                                          = flag_key0^6;          // Ä£ÄâÊäÈë 7 Ò»´ÎÓÐÐ§ÊäÈë
  16          sbit f_step                                               = flag_key0^7;                // ÓÐ²½½ø¿ØÖÆ¼ü°´ÏÂ
  17          
  18          bit f_key,f_key_now,f_buzz,flick_mark,f_auto_buzz;
  19          bit SYS5ms,SYS25ms,SYS100ms,SYS200ms,f_rd_lamp_input_now;
  20          bit f_uart1_using,f_cpld_chanl0_using,f_cpld_chanl1_using;
  21          
  22          bit f_key0_int_bak,f_key1_int_bak,f_key2_int_bak,f_key3_int_bak;
  23          
  24          bit f_cpld_trans_ed,f_cpld_trans_num;
  25          bit f_manual_auto;                                                                              // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
  26          
  27          bit f_manual_step;                                                                              // Ò£¿ØÆ÷ÉÏÖ±½Ó·ÅÐÐÄ³ÏàÎ»°´ÏÂ±êÖ¾
  28          bit f_return_actuate_control;                                                   // ´ÓÊÖ¶¯·µ»Ø¸ÐÓ¦¿ØÖÆ±êÖ¾
  29          
  30          bit f_run_mode,f_lamp_yellow_err,f_lamp_green_or_red_err,f_lamp_err,f_boot,f_key_val,f_mode_switch;
  31          
  32          //1219bit f_manual_use,f_manual_bak;
  33          
  34          unsigned char TELECONTROL_BAK;                                                  // Ò£¿ØÆ÷ÊäÈë±¸·Ý
  35          unsigned char key_val0,key_val1,key_val2,key_val3;
  36          unsigned char key_val,key_val_temp,key_time,key_buf[4],key_count;
  37          unsigned char key0_val,key1_val,key0_val_bak,key1_val_bak,buzz_delay;
  38          
  39          unsigned char pw_count;
  40          unsigned char data comm_baud;
  41          unsigned int g_in_read_p[8];
  42          unsigned int g_in_write_p[8];
  43          unsigned int g_out_read_p[8];
  44          unsigned int g_out_write_p[8];
  45          
  46          unsigned int tempture,led_bg_count;
  47          
  48          unsigned char data flick_count;                                                                                                 // µÆÉÁ¼ÆÊ±£¬µ÷Õû¸Ã±äÁ¿Öµ¿É¸Ä±äµÆÉÁÆµÂÊ 
  49          unsigned char lamp_output_buffer[2*((MAX_LAMP_NUM - 1)/12 + 1)];                                // ½»Í¨µÆÊä³ö»º³å
  50          unsigned char lamp_output_buffer1[2*((MAX_LAMP_NUM - 1)/12 + 1)];                               // ½»Í¨µÆÊä³ö 
  51          unsigned char lamp_flick_buffer[2*((MAX_LAMP_NUM - 1)/12 + 1)];                                 // ½»Í¨µÆÉÁ¹âÊä³ö»º³å 
  52          unsigned char lamp_input_buffer[11][2*((MAX_LAMP_NUM - 1)/12 + 1)];                             // ½»Í¨µÆ×´Ì¬ÊäÈë»º³å£¨µÚ0--6ÐÐ±£´æ
             -×î½ü7´Î¶ÁÈëÖµ£©£¬µÚ8ÐÐ´æ·Å
  53                          // ¸÷µÆµÄÊµ¼Ê×´Ì¬£¨ÓÉÓÚÊµÐÐµÄÊÇ°ë²¨(10ms)¼ì²â, 3ms Ò»´Î£©£¬Í¨¹ý¸ÃÐÐµÄÊý¾ÝÓëËÍÏÔµÄÊý¾Ý±È½Ï£¬À´ÅÐ¶ÏµÆµÄºÃ»
             -µ£¬²¢½øÐÐÂÌ³åÍ»¼ì²â
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 2   

  54          
  55          unsigned char detector_err[4],detector_flag[4],read_detector_time,detector_time;
  56          unsigned char detector_count_bak0[MAX_DETECTOR_COUNT];
  57          
  58          unsigned char cpld_count,cpld_trans_bak;
  59          
  60          unsigned char lamp_health_status[((MAX_LAMP_NUM-1)/8)+1];
  61          
  62          unsigned char manual_set_stage;                                                         // Ò£¿ØÆ÷ÉÏÖ±½Ó·ÅÐÐÄ³ÏàÎ»
  63          unsigned char manual_m_control_mode_bak;                                // ±£´æÊÖ¶¯Ç°µÄ¿ØÖÆÄ£Ê½
  64          
  65          extern command_reactor_t g_command_reactor2,g_command_reactor7,g_command_reactor8;
  66          
  67          void scankey(void);
  68          void decode_key(void); 
  69          void init_gm8125(void);
  70          void refrash_lamp(void);
  71          void out_init(int port);
  72          int wait_for_100ms(void);
  73          void judge_detector(void);
  74          void conflict_detect(void);
  75          int is_out_empty(int port);
  76          void Trans_frame_ack(void);
  77          extern void fun_write_rtc(void);
  78          extern void get_system_time(void);
  79          void get_lamp_health_status(void);
  80          void delay_200us(unsigned char m);
  81          unsigned char out_getchar(int port);
  82          void front_panel_dis(unsigned char ch);
  83          int write_comm(int fd,byte* out_buffer, int size);
  84          unsigned int cal_crc(unsigned char *ptr, unsigned char len);
  85          
  86          extern int is_term_connect_to_yellow(int terminal);
  87          extern void display_status(unsigned char ctemp1,unsigned char ctemp2);
  88          extern void SM_Receive(unsigned char chip_select, unsigned int byte_address,unsigned char rd_count,bit f_a
             -ddr);
  89          extern void SM_Send(unsigned char chip_select, unsigned int byte_address, unsigned char wr_count,bit f_add
             -r);
  90          
  91          unsigned char code key0_table[]={0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x40};
  92          unsigned char code scan_table[]={0xfd,0xfb};
  93          //unsigned char code key_table[]={0x0a,0x0f,0x0c,0x08,0x06,0x04,0x02,0x00,0x0b,0x0e,0x0d,0x09,0x07,0x05,0x
             -03,0x01};
  94          unsigned char code key_table[]={0x04,0x0e,0x0c,0x0a,0x07,0x05,0x02,0x0d,0x08,0x0f,0x10,0x0b,0x09,0x06,0x03
             -,0x01};
  95          unsigned int code crc_ta[16]={  0x0000,0x1021,0x2042,0x3063,0x4084,0x50a5,0x60c6,0x70e7,
  96                                                                          0x8108,0x9129,0xa14a,0xb16b,0xc18c,0xd1ad,0xe1ce,0xf1ef,
  97                                                                          };                                              // CRC ÓàÊ½±í 
  98          
  99          /*********************************************************************************************
 100          *       Ô­ÐÍ£ºint initialize(void)
 101          *       ¹¦ÄÜ: µÆÉ«Êä³ö¿ØÖÆ£¨Ë¢ÐÂ£©×Ó³ÌÐò
 102          *       ËµÃ÷£º
 103          *       ²ÎÊý£ºÎÞ
 104          *       ·µ»Ø£ºÎÞ
 105          *********************************************************************************************/
 106          int initialize(void)
 107          {
 108   1      unsigned char i;
 109   1      unsigned char xdata * data pp;
 110   1      //Õñµ´Æ÷³õÊ¼»¯
 111   1              OSCXCN = 0x67;                                  //¾§ÌåÕñµ´Æ÷·½Ê½£¬Õñµ´Æ÷ÆµÂÊ f > 6.7MHz £¨Page 121£©
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 3   

 112   1              while ((OSCXCN & 0x80) != 0x80);//Ö±µ½¾§ÌåÕñµ´Æ÷ÕýÔÚÔËÐÐ²¢ÇÒ¹¤×÷ÎÈ¶¨
 113   1      
 114   1              OSCICN = 0x88;                                  //Ñ¡ÔñÍâ²¿Õñµ´Æ÷×÷ÎªÏµÍ³Ê±ÖÓ£¬ÄÚ²¿Õñµ´Æ÷½ûÖ¹£¬ÔÊÐíÊ±ÖÓ¶ªÊ§¼ì²âÆ÷£¨¼ì²âµ½Ê±ÖÓ¶ªÊ§Ê±¼ä´ó
             -ÓÚ100 Î¢ÃëÊ±½«´¥·¢¸´Î»£©
 115   1      
 116   1      //¸´Î»Ô´        
 117   1      //      RSTSRC
 118   1      
 119   1              WDTCN = 0xde;                                   // disable watchdog timer
 120   1              WDTCN = 0xad;                           
 121   1                                              
 122   1      //µçÑ¹»ù×¼³õÊ¼»¯                        
 123   1              REF0CN = 0x07;                                  // ADC0 µçÑ¹»ù×¼È¡×ÔVREF0 Òý½Å£¬ÄÚ²¿ÎÂ¶È´«¸ÐÆ÷¡¢Æ«Ñ¹·¢ÉúÆ÷¡¢µçÑ¹»ù×¼»º³åÆ÷¹¤×÷£¨Page 8
             -2£©
 124   1               
 125   1                                              
 126   1      //¶Ë¿Ú³õÊ¼»¯                                
 127   1              XBR0 = 0x0d;                                    // ·ÖÅä´®¿Ú0(2¸öÊä³ö)¡¢IIC(2¸öÊä³ö)¼°PCA0(1¸öÊä³ö)µ½¶Ë¿ÚÒý½Å£¨Page 152£© 
 128   1              XBR1 = 0x14;                                    // ·ÖÅäÖÐ¶Ï0¼°ÖÐ¶Ï1µ½¶Ë¿ÚÒý½Å£¨Page 153£©
 129   1              XBR2 = 0x84;                                    // ·ÖÅä´®¿Ú1µ½¶Ë¿ÚÒý½Å£¬ÈõÉÏÀ­È«¾Ö½ûÖ¹£¨Page 154£© 
 130   1              P1MDIN = 0xff;                                  // ¶Ë¿ÚP1Òý½Å±»ÅäÖÃÎªÊý×ÖÊäÈëÊä³ö·½Ê½£¨Page 156£©
 131   1              XBR2 = XBR2 | 0x40;                             // Ê¹ÄÜ½»²æ¿ª¹Ø
 132   1                                                              
 133   1              P0MDOUT = 0x51;                                 // ½«UART0 µÄTX Òý½ÅTX0 P0.0¡¢UART1 µÄTX Òý½ÅTX1 P0.4¡¢PCA0 µÄÊä³öÒý½ÅCEX0 P0.6£¬ÉèÖÃ
             -ÎªÍÆÍì·½Ê½£¨Page 155£©
 134   1      //      P0 = P0 | 0xae; 
 135   1              P0 = 0xae;                              
 136   1              P1MDOUT = 0xc8;                                 // ½« P1.3¡¢P1.6¡¢P1.7 ÉèÖÃÎªÍÆÍì·½Ê½£¬ÆäËûÉèÖÃÎª OC Êä³ö·½Ê½£¨Page 157£©
 137   1      //      P1 = P1 | 0x3f;                         // ½« P1.0¡¢P1.1¡¢P1.2¡¢P1.4¡¢P1.5 ÉèÖÃÎªÊý×ÖÊäÈë
 138   1              P1 = 0x3f;
 139   1              P2MDOUT = 0xff;                                 // ½« P2.7¡¢P2.6¡¢P2.5¡¢P2.4¡¢P2.3¡¢P2.2¡¢P2.1¡¢P2.0 ÉèÖÃÎªÍÆÍì·½Ê½£¨Page 157£©
 140   1              P2 = 0x40;
 141   1      //      P2 = P2 | 0x80;                                 // ½« P2.7 ÉèÖÃÎªÊý×ÖÊäÈë                               
 142   1              P3MDOUT = 0x8f;                                 // ½«P3.7¡¢P3.3¡¢P3.2¡¢P3.1¡¢P3.0 ÉèÖÃÎªÍÆÍì·½Ê½£¨Page 158£©
 143   1      //      P3 = P3 | 0x30;                 
 144   1              P3 = 0x30;
 145   1              
 146   1              P3IF = 0x04;
 147   1              
 148   1              chip_uart_rst = 0;                              // ¸ø´®¿ÚÀ©Õ¹Ð¾Æ¬ËÍ¸´Î»ÐÅºÅ 
 149   1              chip_uart_rst = 1;                              // ¸ø´®¿ÚÀ©Õ¹Ð¾Æ¬ËÍ¸´Î»ÐÅºÅ 
 150   1              P74OUT = 0x3e;                                  // ½« P4 µÄ¸ßËÄÎ»¡¢P5¡¢P6ÉèÖÃÎªÍÆÍì·½Ê½£¬P4 µÄµÍËÄÎ»¼° P7 ÉèÖÃÎª OC Êä³ö·½Ê½£¨Page 1
             -61£©
 151   1              P7 = 0xff;        
 152   1              
 153   1      //Íâ²¿´æ´¢Æ÷½Ó¿ÚÅäÖÃ³õÊ¼»¯              
 154   1      //      EMI0CN = 0x??                                   //XRAM Ò³Ñ¡ÔñEMI0CN
 155   1              EMI0CF = 0x38;                  //0x3c;         //0x38;                                 //´æ´¢Æ÷½Ó¿ÚÅäÖÃÔÚ P4-P7£¬¹¤×÷ÔÚ·Ç¸´ÓÃ¡¢´ø¿éÑ¡ÔñµÄ·ÖÆ¬·½Ê½£¨Page 13
             -0£©
 156   1      
 157   1              EA = 0;                                                 //½ûÖ¹ËùÓÐÖÐ¶Ï
 158   1      //      FLSCL = FLSCL | 0X01;                   //ÔÊÐíÓÉÓÃ»§Èí¼þÐ´/²Á³ýFLASH
 159   1      //      PSCTL = PSCTL | 0x02;                   //ÔÊÐíFLASH ÉÈÇø²Á³ý£¨Page 123£©
 160   1      //      PSCTL = PSCTL | 0x01;                   //ÔÊÐíFLASH Ð´£¨Page 123£©
 161   1      //                                      
 162   1      //                                      
 163   1      //      PSCTL = PSCTL & 0xfd;                   //½ûÖ¹FLASH ÉÈÇø²Á³ý£¨Page 123£©
 164   1      //      PSCTL = PSCTL & 0xfe;                   //½ûÖ¹FLASH Ð´£¨Page 123£©
 165   1      //      FLSCL = FLSCL & 0xfe;                   //½ûÖ¹ÓÉÓÃ»§Èí¼þÐ´/²Á³ýFLASH£¨Page 123£©
 166   1      //      
 167   1      //      PSCTL = PSCTL | 0x04;                   //´ÓÓÃ»§Èí¼þ·ÃÎÊFLASH Ê±£¬½«·ÃÎÊ128 ×Ö½ÚµÄÁÙÊ±´æ´¢Æ÷ÉÈÇø£¨EEPROM£©£¨Page 123£©
 168   1              EMI0TC = 0x2c;          //1c;           //0x20                  // 0x7d;        //3c;   //0c;   //Íâ²¿´æ´¢Æ÷½Ó¿ÚµÄÊ±Ðò²ÎÊý£¨Page 135£©
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 4   

 169   1      
 170   1      //¿É±à³Ì¼ÆÊýÆ÷ÕóÁÐ£¨PCA0£©³õÊ¼»¯£¨½ö·ÖÅäÒ»¸öÊä³ö CEX0 µ½Òý½Å P0.4£©
 171   1              PCA0CN = PCA0CN | 0x40;                 //ÔÊÐíPCA0 ¼ÆÊýÆ÷¶¨Ê±Æ÷£¨Page 233£©
 172   1              PCA0MD = 0x80;                                  //µ±ÏµÍ³¿ØÖÆÆ÷´¦ÓÚµÈ´ý·½Ê½Ê±£¬PCA0 Í£Ö¹¹¤×÷£»PCA0 ¼ÆÊýÆ÷µÄÊ±»ùÎªÏµÍ³Ê±ÖÓµÄ 12 ·ÖÆµ£»½û
             -Ö¹CF ÖÐ¶Ï£¨Page 234£©
 173   1              PCA0CPM0 = 0x46;                                //ÔÊÐíÆµÂÊÊä³ö·½Ê½£¬½ûÖ¹ CCF0 ÖÐ¶Ï£¨Page 235£©
 174   1              PCA0CPL0 = 0x5c;                                //PCA0 ²¶×½Ä£¿é¸ß×Ö½Ú£¨Page 236£©
 175   1              PCA0CPH0 = 0x5c;                                //PCA0 ²¶×½Ä£¿é¸ß×Ö½Ú£¨Page 236£©
 176   1              
 177   1      //ADC0 ³õÊ¼»¯£¬°´¼ü 1 ÓÉ Ain0.0 ÊäÈë,°´¼ü 2 ÓÉ Ain0.1 ÊäÈë
 178   1              ADC0CF = 0x79;                                  //CLKSAR0 Îª 2.21184MHz£¬ÄÚ²¿·Å´óÆ÷ÔöÒæÎª 2 £¨Page 55£©
 179   1              ADC0CN = 0x85;                                  //ADC0 ÔÊÐíÒ»Ö±¸ú×Ù·½Ê½¡¢¶¨Ê±Æ÷ 3 Òç³öÆô¶¯ADC0 ×ª»»¡¢ADC0H:ADC0L ¼Ä´æÆ÷Êý¾Ý×ó¶ÔÆë
 180   1      //      ADC0CN = 0xc4;                                  //ADC0 ÔÊÐí¡¢¶¨Òå¸ú×Ù·½Ê½¡¢¶¨Ê±Æ÷ 3 Òç³öÆô¶¯ADC0 ×ª»»¡¢ADC0H:ADC0L ¼Ä´æÆ÷Êý¾ÝÓÒ¶ÔÆë
 181   1              AMX0CF = 0x00;                                  //È«²¿ÊäÈë£¨Ain0.0 - Ain0.7£©¹¤×÷ÔÚµ¥¶Ë·½Ê½£¨Page 53£©
 182   1                                                      
 183   1              AMX0SL = 0x00;                                  //AMUX Ñ¡Ôñ Ain0.0£¨¼üÅÌ 0 ÊäÈë¶Ë£©£¨Page 54£©
 184   1      //      AMX0SL = 0x01;                                  //AMUX Ñ¡Ôñ Ain0.1£¨¼üÅÌ 1 ÊäÈë¶Ë£©£¨Page 54£©
 185   1      //      AMX0SL = 0x02;                                  //AMUX Ñ¡Ôñ Ain0.2£¨¼üÅÌ 2 ÊäÈë¶Ë£©£¨Page 54£©
 186   1      //      AMX0SL = 0x08;                                  //AMUX Ñ¡Ôñ ÎÂ¶È´«¸ÐÆ÷£¨Page 54£©
 187   1                                                      
 188   1              ADC0LTH = 0x70;                                 //£¨Page 60£©
 189   1              ADC0LTL = 0x00;                         
 190   1              ADC0GTH = 0x20;                         
 191   1              ADC0GTL = 0x00;                                 //°´¼ü²ÉÓÃ A/D ×ª»»·½Ê½£¬µ±A/DÖµÔÚÒ»¶¨·¶Î§ÄÚÊ±£¬ÏµÍ³²úÉúÖÐ¶ÏÔÙÓÐÈí¼þÅÐ¶ÏÊÇÄ³¸ö°´¼ü
 192   1              
 193   1      //¶¨Ê±Æ÷³õÊ¼»¯£¨ÏµÍ³Ê±ÖÓÎª£º22.1184MHz£©
 194   1              CKCON = 0x00;                                   //¶¨Ê±Æ÷Ê¹ÓÃÏµÍ³Ê±ÖÓµÄ 12 ·ÖÆµ£¨Page 202£©
 195   1              TMOD = 0x11;                                    //¶¨Ê±Æ÷ 0¡¢1 ¹¤×÷ÔÚ·½Ê½ 1 £¨16 Î»¼ÆÊýÆ÷/¶¨Ê±Æ÷£©£¨Page 207£©
 196   1      //      TMOD = 0x21;                                    //¶¨Ê±Æ÷ 0 ¹¤×÷ÔÚ·½Ê½ 1 £¨16 Î»¼ÆÊýÆ÷/¶¨Ê±Æ÷£©£¬¶¨Ê±Æ÷ 0 ¹¤×÷ÔÚ·½Ê½ 3 £¨×÷Îª UART0 µÄ²
             -¨ÌØÂÊ·¢ÉúÆ÷£©£¨Page 207£©
 197   1                                                      
 198   1              T2CON = 0x30;                                   //¶¨Ê±Æ÷ 2 ×÷Îª UART0 µÄ²¨ÌØÂÊ·¢ÉúÆ÷    230400  115200  76800   38400   19200   9600    7200    4800    240
             -0        1200£¨Page 213£©
 199   1              RCAP2L = 0xa0;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú                    0xfd    0xfa    0xf7    0xee    0xdc    0xb8    0xa0    0x70    0xe0    0xc0
 200   1              RCAP2H = 0xff;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷¸ß×Ö½Ú                    0xff    0xff    0xff    0xff    0xff    0xff    0xff    0xff    0xfe    0xfd
 201   1              TL2 = RCAP2L;                                   //¶¨Ê±Æ÷ 2 µÄµÍ×Ö½Ú
 202   1              TH2 = RCAP2H;                                   //¶¨Ê±Æ÷ 2 µÄµÍ×Ö½Ú£¨Page 214£©
 203   1              TR2 = 1;                                                //Æô¶¯¶¨Ê±Æ÷ 2 £¨ÔÚ²¨ÌØÂÊ·¢ÉúÆ÷·½Ê½£¬¶¨Ê±Æ÷ 2 µÄÊ±»ùÐÅºÅÎª£ºÏµÍ³Ê±ÖÓ/2£©£¨Page 207£©
 204   1                                                      
 205   1              TMR3CN = 0x00;                                  //¶¨Ê±Æ÷ 3 Ê¹ÓÃÏµÍ³Ê±ÖÓµÄ 12 ·ÖÆµ£¨Ê¹ÓÃ¶¨Ê±Æ÷ 3 ¶¨Ê± 0.5ms Æô¶¯ADC0 ×ª»»£¬¼°²úÉú 5ms ×
             -÷ÎªÏµÍ³Ñ­»·ÖÜÆÚ£©£¨Page 216£©
 206   1              TMR3RLL = 0x65;                                 //¶¨Ê±Æ÷ 3 ÖØÔØ¼Ä´æÆ÷µÄµÍ×Ö½Ú
 207   1              TMR3RLH = 0xfc;                                 //¶¨Ê±Æ÷ 3 ÖØÔØ¼Ä´æÆ÷µÄ¸ß×Ö½Ú
 208   1              TMR3L = TMR3RLL;                                //¶¨Ê±Æ÷ 3 µÄµÍ×Ö½Ú
 209   1              TMR3H = TMR3RLH;                                //¶¨Ê±Æ÷ 3 µÄ¸ß×Ö½Ú£¨Page 217£©
 210   1              TMR3CN = TMR3CN | 0x04;                 //Æô¶¯¶¨Ê±Æ÷ 3 £¨Page 216£©
 211   1              
 212   1              T4CON = 0x30;                                   //¶¨Ê±Æ÷ 4 ×÷Îª UART1 µÄ²¨ÌØÂÊ·¢ÉúÆ÷    19200   9600    4800    2400    1200£¨Page 222£©
 213   1              RCAP4L = 0xbf;                                  //¶¨Ê±Æ÷ 4 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú                             0xdc    0xb8    0x70    0xe0    0xc0
 214   1              RCAP4H = 0xfd;                                  //¶¨Ê±Æ÷ 4 ²¶×½¼Ä´æÆ÷¸ß×Ö½Ú                             0xff    0xff    0xff    0xfe    0xfd
 215   1              TL4 = RCAP4L;                                   //¶¨Ê±Æ÷ 4 µÄµÍ×Ö½Ú
 216   1              TH4 = RCAP4H;                                   //¶¨Ê±Æ÷ 4 µÄµÍ×Ö½Ú£¨Page 223£©
 217   1              T4CON = T4CON | 0x04;                   //Æô¶¯¶¨Ê±Æ÷ 4 £¨ÔÚ²¨ÌØÂÊ·¢ÉúÆ÷·½Ê½£¬¶¨Ê±Æ÷ 4 µÄÊ±»ùÐÅºÅÎª£ºÏµÍ³Ê±ÖÓ/2£©£¨Page 22
             -2£©
 218   1              
 219   1              pp = ADDRESS_PC_WR2;
 220   1              *pp = 0x00;
 221   1              
 222   1              P3IF = P3IF & 0xbf;
 223   1              
 224   1      //ÖÐ¶Ï³õÊ¼»¯ 
 225   1      //W     IT0 = 1;                                                //INT0 Îª±ßÑØ´¥·¢
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 5   

 226   1              IT1 = 1;                                                //INT1 Îª±ßÑØ´¥·¢£¨Page 105£©
 227   1              EX0 = 1;                                                //ÔÊÐíINT0 ÖÐ¶Ï
 228   1      //      EX1 = 1;                                                //ÔÊÐíINT1 ÖÐ¶Ï
 229   1              ES0 = 1;                                                //ÔÊÐíUART0ÖÐ¶Ï
 230   1      //      ET0 = 1;                                                //ÔÊÐí¶¨Ê±Æ÷ 0 ÖÐ¶Ï
 231   1              PX0 = 1;                                                //Íâ²¿ÖÐ¶Ï 0 Îª¸ßÓÅÏÈ¼¶
 232   1      //      EA = 1;                                                 //ÔÊÐíÖÐ¶Ï£¨Page 123£©
 233   1              EIP2 = 0x11;                                    // Íâ²¿ÖÐ¶Ï 6 Óë¶¨Ê±Æ÷ 3 ÖÐ¶ÏÎª¸ßÓÅÏÈ¼¶
 234   1              
 235   1              EIE1 = 0x06;                                    //ÔÊÐíADC0 ´°¿Ú±È½Ï¡¢SMBUS ÖÐ¶Ï£¨Page 107£©
 236   1              EIE2 = 0x11;                                    //ÔÊÐíÍâ²¿ÖÐ¶Ï 6 ÖÐ¶Ï£¬ÔÊÐí¶¨Ê±Æ÷ 3 ÖÐ¶Ï£¨Page 107£©
 237   1      //      EIE2 = 0x43;                                    //ÔÊÐíUART1 ÖÐ¶Ï£¬ÔÊÐí¶¨Ê±Æ÷ 3 ÖÐ¶Ï£¬ÔÊÐíADC0 ×ª»»½áÊø²úÉúµÄÖÐ¶Ï£¨Ñ¡ÔñÎÂ¶È´«¸ÐÆ÷Ê±£©
 238   1                                                      
 239   1      //´®¿Ú³õÊ¼»¯                            
 240   1              PCON = 0x00;                                    //µçÔ´¿ØÖÆ¼Ä´æÆ÷£¬ÔÊÐí¶Á/Ð´ UART ·½Ê½ÉèÖÃÎ»SM2-SM0£¨Í¬ UART Ö¡´íÎóºÍ´«Êä´íÎó¼ì²âÎ»Î»ÖÃÏà
             -Í¬£©£¨Page 112£©
 241   1              SCON0 = 0x70;                                   //·½Ê½ 1 £¨8 Î»UART ¿É±ä²¨ÌØÂÊ£©£¬UART0 ½ÓÊÕÔÊÐí£¨Page 190£©
 242   1              SCON1 = 0x70;                                   //·½Ê½ 1 £¨8 Î»UART ¿É±ä²¨ÌØÂÊ£©£¬UART1 ½ÓÊÕÔÊÐí£¨Page 199£©
 243   1      
 244   1      //IIC³õÊ¼»¯ SMB0CN ÖÐµÄ TOE ²»ÄÜÖÃÎª 1£¬·ñÔò½«Õ¼ÓÐ¶¨Ê±Æ÷ 3£¬ÒÔ¼ì²â SCL µÍµçÆ½³¬Ê±£¨Page 167£¬171£©
 245   1              ENSMB = 1;                                              //ÔÊÐíSMBus£¨IIC£©£¨Page 171£©
 246   1              SMB0CR = 0x92;                                  //Ê±ÖÓÆµÂÊÔ¤ÉèÖµ£¨ÏµÍ³Ê±ÖÓÎª£º22.1184MHzÊ±£¬SCL µÄËÙÂÊÎª 100KHz ×óÓÒ£©£¨Page 172£©
 247   1              SMB0ADR = 0xa0;                                 //µØÖ·¼Ä´æÆ÷£¬Î»7-1£ºSMBus0 ´ÓµØÖ·£¨Page 173£©
 248   1      //      SMB0STA = ;                                             //SMBus ×´Ì¬¼Ä´æÆ÷£¨Page 173£©
 249   1      //      SMB0DAT = ;                                             //Êý¾Ý¼Ä´æÆ÷
 250   1      
 251   1      // ¹Ø±ÕËùÓÐµÄµÆ
 252   1              pp = ADDRESS_74HC573A;
 253   1              for (i=0x00;i<(MAX_LAMP_NUM - 1)/12 + 1;i++) {
 254   2                      *pp=0xff;                                       // µÍµçÆ½µÆµãÁÁ
 255   2                      pp = pp + 0x200;
 256   2                      *pp=0xff;                                       // µÍµçÆ½µÆµãÁÁ
 257   2                      pp = pp + 0x200;
 258   2                      }
 259   1      // ¹Ø±ÕËùÓÐµÄµÆ
 260   1      
 261   1      // Íâ²¿ RAM ³õÊ¼»¯
 262   1              for (pp=0x00;pp<0x8000;pp++) {
 263   2                      *pp = 0xaa;
 264   2                      _nop_();
 265   2                      comm_baud = *pp;
 266   2                      while (comm_baud != 0xaa) {
 267   3                              delay_200us(250); 
 268   3                              delay_200us(250);
 269   3                              buzz = !buzz;
 270   3                              };
 271   2                      *pp = 0x00;
 272   2                      }
 273   1      // Íâ²¿ RAM ³õÊ¼»¯
 274   1      
 275   1              EA = 1;                                                 //ÔÊÐíÖÐ¶Ï£¨Page 123£©
 276   1      
 277   1      // RTC ³õÊ¼»¯
 278   1              while (SM_BUSY);                                                                        // Wait for SMBus to be free.
 279   1              BUFF_SMB_TR[0] = 0x00;                                                          // ÇåÍ£Ö¹¸üÐÂÎ»
 280   1              SM_Send(CHIP_RTC,0x000c,0x01,0);                
 281   1              while (SM_BUSY);
 282   1              SM_Receive(CHIP_RTC,0x0001,0x01,0);
 283   1              while (SM_BUSY);                                                                        // Wait for SMBus to be free.
 284   1              BUFF_SMB_TR[0] = BUFF_SMB_RD[0] & 0x7f;                         // ÇåÍ£Ö¹Î»
 285   1              SM_Send(CHIP_RTC,0x0001,0x01,0);
 286   1      // RTC ³õÊ¼»¯
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 6   

 287   1      
 288   1      // LCD ³õÊ¼»¯
 289   1      //      while (SM_BUSY);                                                                        // Wait for SMBus to be free.
 290   1      //      BUFF_SMB_TR[0] = 0x00;                                                          //
 291   1      //      SM_Send(SLAVE_LCD,0xc8e0,0x01,1);
 292   1      //      while (SM_BUSY);                                                                        // Wait for SMBus to be free.
 293   1      // LCD ³õÊ¼»¯
 294   1      
 295   1              load_config_data();
 296   1      
 297   1              wait_for_100ms();
 298   1              wait_for_100ms();                                                                       // 82C55 Óë gm8125 ³õÊ¼»¯Ö®Ç°µÄÑÓÊ±
 299   1      
 300   1      // gm8125 ³õÊ¼»¯        
 301   1              chip_uart_rst = 1;
 302   1              delay_200us(50); 
 303   1              init_gm8125();
 304   1      // gm8125 ³õÊ¼»¯
 305   1              
 306   1      // 82C55 ³õÊ¼»¯                         
 307   1              for (i=0x00;i<4;i++) {                                                          
 308   2                      pp = ADDRESS_82C55A_D + i * 0x200;                                                              
 309   2                      *pp = 0x90;                                                                             // A ¿ÚÎªÊäÈë¿Ú£¬B¡¢C ¿ÚÎªÊä³ö¿Ú£¬¶¼¹¤×÷ÔÚ·½Ê½ 0
 310   2                      pp = ADDRESS_82C55A_C + i * 0x200;
 311   2                      *pp = 0xff;
 312   2                      pp = ADDRESS_82C55A_B + i * 0x200;
 313   2                      *pp = 0xff;     
 314   2                      }
 315   1      // 82C55 ³õÊ¼»¯
 316   1              f_run_mode = 0;                                                                         // ¿ª»úºó£¬Ä¬ÈÏÒÔ±£´æµÄÉè¶¨ÔËÐÐ
 317   1              return 0;       
 318   1      }
 319          
 320          /*********************************************************************************************
 321          *       Ô­ÐÍ£ºvoid refrash_lamp(void)
 322          *       ¹¦ÄÜ: µÆÉ«Êä³ö¿ØÖÆ£¨Ë¢ÐÂ£©×Ó³ÌÐò
 323          *       ËµÃ÷£º
 324          *       ²ÎÊý£ºÎÞ
 325          *       ·µ»Ø£ºÎÞ
 326          *********************************************************************************************/
 327          void refrash_lamp(void)
 328          {
 329   1      unsigned char i,j;
 330   1      unsigned char xdata *pp;
 331   1              flick_count++;
 332   1      //061013        if (flick_count >= 0x06) {                                              // µÆÉÁ¼ÆÊ±£¬µ÷Õû¸Ã±äÁ¿Öµ¿É¸Ä±äµÆÉÁÆµÂÊ
 333   1              if (flick_count >= 0x04) {                                                              // µÆÉÁ¼ÆÊ±£¬µ÷Õû¸Ã±äÁ¿Öµ¿É¸Ä±äµÆÉÁÆµÂÊ
 334   2                      flick_count = 0x00;
 335   2                      flick_mark = !flick_mark;       
 336   2                      }
 337   1              for(i=0;i<2*((MAX_LAMP_NUM - 1)/12 + 1);i++){
 338   2                      if(flick_mark) lamp_output_buffer1[i]=(lamp_flick_buffer[i]) | lamp_output_buffer[i]; //ÁÁ
 339   2                      else lamp_output_buffer1[i] = lamp_output_buffer[i]; //Ãð
 340   2                      }
 341   1              
 342   1              j = 0x00;
 343   1      //0914  pp = ADDRESS_74HC573A;
 344   1              pp = ADDRESS_74HC573K;
 345   1              for (i=0x00;i<(MAX_LAMP_NUM - 1)/12 + 1;i++) {
 346   2                      *pp=~lamp_output_buffer1[j];                                    // µÍµçÆ½µÆµãÁÁ
 347   2                      j++;
 348   2                      pp = pp + 0x200;
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 7   

 349   2                      *pp=~lamp_output_buffer1[j];                                    // µÍµçÆ½µÆµãÁÁ
 350   2                      j++;
 351   2      //0914          pp = pp + 0x200;
 352   2                      pp = pp - 0x600;
 353   2              }
 354   1      }
 355          /*********************************************************************************************
 356          *       Ô­ÐÍ£ºint get_temperature()
 357          *       ¹¦ÄÜ: »ñÈ¡ÎÂ¶È£¬µ¥Î»Îª0.1ÉãÊÏ¶È
 358          *       ËµÃ÷£º
 359          *       ²ÎÊý£ºÎÞ
 360          *       ·µ»Ø£ºÎÞ
 361          *********************************************************************************************/
 362          int get_run_mode()
 363          {
 364   1              return f_run_mode;
 365   1      }
 366          /*********************************************************************************************
 367          *       Ô­ÐÍ£ºint get_temperature()
 368          *       ¹¦ÄÜ: »ñÈ¡ÎÂ¶È£¬µ¥Î»Îª0.1ÉãÊÏ¶È
 369          *       ËµÃ÷£º
 370          *       ²ÎÊý£ºÎÞ
 371          *       ·µ»Ø£ºÎÞ
 372          *********************************************************************************************/
 373          int get_temperature()
 374          {
 375   1              return tempture;
 376   1              }
 377          
 378          /*********************************************************************************************
 379          *       Ô­ÐÍ£ºint is_door_illegal_open()
 380          *       ¹¦ÄÜ: ÃÅÊÇ·ñ·Ç·¨´ò¿ª
 381          *       ËµÃ÷£º
 382          *       ²ÎÊý£ºÎÞ
 383          *       ·µ»Ø£ºÎÞ
 384          *********************************************************************************************/
 385          int is_door_illegal_open()
 386          {
 387   1              if (f_out0_int) {
 388   2                      f_out0_int = 0;
 389   2                      f_buzz = 1;
 390   2                      led_bg = 1;                                     // µãÁÁ LCD ±³¹â
 391   2                      led_bg_count = 0;
 392   2                      return 1;
 393   2                      }
 394   1              return 0;
 395   1              }
 396          
 397          /*********************************************************************************************
 398          *       Ô­ÐÍ£ºvoid power_check(void)
 399          *       ¹¦ÄÜ: ¼ì²âµçÔ´×´Ì¬£¬Èô½»Á÷µçÃ»µç£¬ÔòÆô¶¯×ÊÁÏ±£´æ³ÌÐò£¬Íê³ÉºóÇÐ¶Ïµç³Ø¹©µç»ØÂ·
 400          *       ËµÃ÷£º
 401          *       ²ÎÊý£ºÎÞ
 402          *       ·µ»Ø£ºÎÞ
 403          *********************************************************************************************/
 404          void power_check(void)
 405          {
 406   1              if (pw_ac) {
 407   2                      power = 1;                                              // 
 408   2                      pw_count = 0x00;
 409   2                      
 410   2                      }
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 8   

 411   1              else pw_count++;
 412   1              if (pw_count > 0x30) {                          // (100 - 120ms) ¼ì²â²»µ½½»Á÷µçÔ´ÔòÆô¶¯±¸·Ý³ÌÐò
 413   2                      pw_count = 0x40;
 414   2                      }
 415   1              }
 416          
 417          /*********************************************************************************************
 418          *       Ô­ÐÍ£ºvoid wait_for_100ms(void)
 419          *       ¹¦ÄÜ: ¶¨Ê± 100ms Ñ­»·
 420          *       ËµÃ÷£º
 421          *       ²ÎÊý£ºÎÞ
 422          *       ·µ»Ø£ºÎÞ
 423          *********************************************************************************************/
 424          int wait_for_100ms(void)
 425          {
 426   1              unsigned char xdata * data pp;
 427   1              do {
 428   2                      while (!SYS5ms);
 429   2                      scankey();
 430   2                      if (SYS25ms) {
 431   3                              SYS25ms = 0;
 432   3                              decode_key();
 433   3                              }
 434   2                      wr_eeprom_count++;
 435   2                      if (wr_eeprom_count == 0x02) f_wr_eeprom_now = 0;
 436   2                      if (wr_eeprom_count >= 0x64) wr_eeprom_count = 0;
 437   2                      get_save_phase_plan();
 438   2                      fun_smbus();
 439   2                      power_check();
 440   2                      SYS5ms = 0;     
 441   2                      } while(!SYS100ms);
 442   1              SYS100ms = 0;
 443   1              
 444   1              watchdog=~watchdog;
 445   1              
 446   1              led_bg_count++;
 447   1              if (led_bg_count > 12000) {
 448   2                      led_bg = 0;
 449   2                      led_bg_count = 18000;
 450   2                      }
 451   1              else led_bg = 1;
 452   1              
 453   1      //      refrash_lamp();
 454   1      
 455   1              judge_detector();
 456   1              
 457   1              if (f_temperature) {                                                    // ÎÂ¶È
 458   2                      f_temperature = 0;
 459   2                      result = ((result - 41857) * 100L) / 1540;
 460   2                      tempture = (int)(result - 15);                                  // ¼õÈ¥ 1.5 ÉãÊÏ¶È
 461   2                      }
 462   1              
 463   1              buzz_delay++;
 464   1              if (buzz_delay >= 0x02) {
 465   2                      buzz = 0;
 466   2                      buzz_delay = 0x05;
 467   2                      }
 468   1              if (f_buzz) {
 469   2                      f_buzz = 0;
 470   2                      buzz_delay = 0x00;
 471   2                      buzz = 1;
 472   2                      }
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 9   

 473   1      
 474   1      //1126  if (f_boot) get_lamp_health_status();
 475   1      
 476   1              front_panel_dis(g_controller_status.m_actual_control_mode);             // Ç°Ãæ°å¿ØÖÆÄ£Ê½ÏÔÊ¾£¨led Ö¸Ê¾µÆ£©
 477   1      
 478   1              reactor_handle_command(&g_command_reactor8);                                    // Í¨ÐÅ´¦Àí cpld Í¨µÀ 1
 479   1              while(!SYS100ms);
 480   1              SYS100ms = 0;
 481   1              reactor_handle_command(&g_command_reactor2);                                    // Í¨ÐÅ´¦Àí uart0 µÄ×ÓÍ¨µÀ 2
 482   1              reactor_handle_command(&g_command_reactor7);                                    // Í¨ÐÅ´¦Àí cpld Í¨µÀ 1
 483   1              
 484   1      //      if (f_boot) {
 485   1                      get_lamp_health_status();
 486   1                      conflict_detect();
 487   1                      
 488   1                      cpld_count++;
 489   1                      if (cpld_count > 0x0f) {                                                // cpld Á½¶Ë¿Ú³¬¹ý 1500ms Ã»ÓÐÊý¾Ý´«Êä£¬¾ÍÈÏÎª pc104 
 490   2                              cpld_count = 0x00;                                                      // ¶ªÊ§ÖÐ¶Ï£¬ÓÉ mcu Ö÷¶¯Çåµô¸ÃÖÐ¶Ï£¬²¢²¹·¢¶ªÊ§ÖÐ¶ÏµÄÊý¾Ý
 491   2                              pp = ADDRESS_PC_WR2;
 492   2                              *pp = 0x00;                                                                     // ÇåÖÐ¶Ï
 493   2                              if (f_cpld_trans_num) pp = ADDRESS_PC_WR0;      // ²¹·¢Êý¾ÝµÄÍ¨µÀµØÖ·
 494   2                              else pp = ADDRESS_PC_WR1;                       
 495   2                              *pp = cpld_trans_bak;                                           // ²¹·¢Êý¾Ý
 496   2                      }
 497   1      //              }
 498   1      
 499   1              refrash_lamp();
 500   1      
 501   1      //      key_val1 = 0x00;
 502   1      //      pp = &key_val1;
 503   1      //      write_comm(7,pp,1);
 504   1      //      key_val0 = 0x00;
 505   1      //      pp = &key_val0;
 506   1      //      write_comm(8,pp,1);
 507   1      
 508   1      
 509   1      //      uart0_trans_buffer[0][g_out_write_p[0]++] = 0x55;
 510   1      //      uart0_trans_buffer[0][g_out_write_p[0]++] = 0x54;
 511   1      //      uart0_trans_buffer[0][g_out_write_p[0]++] = 0x53;
 512   1      //      uart0_trans_buffer[0][g_out_write_p[0]++] = 0x52;
 513   1      //
 514   1      //      if(g_out_write_p[0] == 200) g_out_write_p[0] = 0;
 515   1      //      
 516   1      //      uart0_trans_buffer[1][g_out_write_p[1]++] = 0xa5;
 517   1      //      uart0_trans_buffer[1][g_out_write_p[1]++] = 0xa4;
 518   1      //      uart0_trans_buffer[1][g_out_write_p[1]++] = 0xa3;
 519   1      //      uart0_trans_buffer[1][g_out_write_p[1]++] = 0xa2;
 520   1      //
 521   1      //      if(g_out_write_p[1] == 200) g_out_write_p[1] = 0;       
 522   1              
 523   1      
 524   1      //      uart0_trans_buffer[0][0] = 0x55;
 525   1      //      uart0_trans_buffer[0][1] = 0x54;
 526   1      //      uart0_trans_buffer[0][2] = 0x53;
 527   1      //      uart0_trans_buffer[0][3] = 0x52;
 528   1      //      
 529   1      //      uart0_trans_buffer[1][0] = 0xa5;
 530   1      //      uart0_trans_buffer[1][1] = 0xa4;
 531   1      //      uart0_trans_buffer[1][2] = 0xa3;
 532   1      //      uart0_trans_buffer[1][3] = 0xa2;
 533   1      //      
 534   1      //      uart0_trans_buffer[2][0] = 0x05;
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 10  

 535   1      //      uart0_trans_buffer[2][1] = 0x04;
 536   1      //      uart0_trans_buffer[2][2] = 0x03;
 537   1      //      uart0_trans_buffer[2][3] = 0x02;
 538   1      //      
 539   1      //      uart0_trans_buffer[3][0] = 0x5a;
 540   1      //      uart0_trans_buffer[3][1] = 0x4a;
 541   1      //      uart0_trans_buffer[3][2] = 0x3a;
 542   1      //      uart0_trans_buffer[3][3] = 0x2a;
 543   1      //      
 544   1      //      uart0_trans_buffer[4][0] = 0x50;
 545   1      //      uart0_trans_buffer[4][1] = 0x40;
 546   1      //      uart0_trans_buffer[4][2] = 0x30;
 547   1      //      uart0_trans_buffer[4][3] = 0x20;                        
 548   1      //      
 549   1      //      uart0_chanl_sel = 0x08; 
 550   1      //      UART_CHANL = (UART_CHANL & 0xc7) | uart0_chanl_sel;
 551   1      //      SBUF0 = out_getchar(1);
 552   1      //      f_uart0_transed_now0 = 1;
 553   1      //      f_uart0_transed_now1 = 1;
 554   1      //      
 555   1      //      uart0_transed_count[1] = 0x00; 
 556   1      //      uart0_transed_count[2] = 0x00;
 557   1      //      uart0_transed_count[3] = 0x00;
 558   1      //      uart0_transed_count[4] = 0x00;
 559   1      //      
 560   1      //      uart0_trans_count[1] = 0x04; 
 561   1      //      uart0_trans_count[2] = 0x04;
 562   1      //      uart0_trans_count[3] = 0x04;
 563   1      //      uart0_trans_count[4] = 0x04;
 564   1      //      
 565   1      //      f_uart0_transed_now1 = 1;
 566   1      //      f_uart0_transed_now2 = 1;
 567   1      //      f_uart0_transed_now3 = 1;       
 568   1      //      f_uart0_transed_now4 = 1;
 569   1              
 570   1      //      display_status(g_controller_status.m_minute,g_controller_status.m_second);
 571   1      //      display_status((char)result,g_controller_status.m_second);
 572   1      }
 573          
 574          /*********************************************************************************************
 575          *       Ô­ÐÍ£ºvoid judge_detector(void)
 576          *       ¹¦ÄÜ: ³µÁ¾¼ì²âÆ÷ºÃ»µÅÐ¶Ï£¨ÓÉÓÚÖ»ÄÜ¸ù¾ÝÆäÊä³öÀ´ÅÐ¶Ï£¬Òò´Ë²»Ì«×¼È·£¬Ö»ÄÜ×÷Îª²Î¿¼£©
 577          *       ËµÃ÷£º
 578          *       ²ÎÊý£ºÎÞ
 579          *       ·µ»Ø£ºÎÞ
 580          *********************************************************************************************/
 581          void judge_detector(void)
 582          {       
 583   1      unsigned char i,chartemp,j,chanl_start,detector_count_buff[MAX_DETECTOR_COUNT];
 584   1              read_detector_time++;
 585   1              if (read_detector_time >= 40) {                 // 4 ÃëÖÓÅÐ¶ÏÒ»´Î
 586   2                      get_detector_counter(&detector_count_buff);
*** WARNING C182 IN LINE 586 OF MCU.C: pointer to different objects
 587   2                      read_detector_time = 0x00;
 588   2                      detector_time++;
 589   2                      for (i=0x00;i<MAX_DETECTOR_COUNT;i++) {
 590   3                              if (detector_count_buff[i] < detector_count_bak0[i]) chartemp = (64 + detector_count_buff[i]) -  detect
             -or_count_bak0[i];
 591   3                              else chartemp = detector_count_buff[i] -  detector_count_bak0[i];
 592   3                      
 593   3                              chanl_start = check_chanl_7;
 594   3                              for (j=0x00;j<i%8;j++) chanl_start = chanl_start >> 1;
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 11  

 595   3                      
 596   3                              if (chartemp > 8) {                             // 4 ÃëÄÚ¼ì²âÆ÷Êä³öÊý±ä»¯Á¿´óÓÚ 8£¬¼´ÈÏÎª¸ÃÂ·¼ì²âÆ÷ÓÐÎÊÌâ
 597   4      //060211                                chanl_start = check_chanl_7;
 598   4      //060211                                for (j=0x00;j<i%8;j++) chanl_start = chanl_start >> 1;
 599   4                                      detector_err[i / 8] = detector_err[i / 8] | chanl_start;
 600   4                                      
 601   4                                      set_error(DETECTOR_ERROR,&g_controller_status.m_error.m_hard_error);                    // ±£´æ¸Ã¹ÊÕÏ
 602   4                                      }
 603   3                              else {                                                  // ·ñÔò¼´ÈÏÎª¸ÃÂ·¼ì²âÆ÷Ã»ÓÐÎÊÌâ
 604   4                                      detector_err[i / 8] = detector_err[i / 8] & (~chanl_start);
 605   4                                      }
 606   3      
 607   3      
 608   3      
 609   3      
 610   3      //                      else {
 611   3      //                              if ((chartemp != 0x00) | ((g_config.m_detector_setting.m_attribute[i] & 0x40) == 0x00)) {
 612   3      //                                      chanl_start = check_chanl_7;
 613   3      //                                      for (j=0x00;j<i%8;j++) chanl_start = chanl_start >> 1;
 614   3      //                                      detector_flag[i / 8] = detector_flag[i / 8] | chanl_start;
 615   3      //                                      }
 616   3      //                              }
 617   3                              detector_count_bak0[i] = detector_count_buff[i];
 618   3                              }
 619   2      //              if (detector_time >= 248) {             // ÆôÓÃµÄ¼ì²âÆ÷Èç¹ûÔÚ 248 * 4 ÃëÄÚ£¬Ã»ÓÐ¼ì²âµ½³µ¼´ÈÏÎª¸ÃÂ·¼ì²âÆ÷ÓÐÎÊÌâ
 620   2      //                      detector_time = 0x00;
 621   2      //                      detector_err[0] = ~detector_flag[0] | detector_err[0];
 622   2      //                      detector_err[1] = ~detector_flag[1] | detector_err[1];
 623   2      //                      detector_err[2] = ~detector_flag[2] | detector_err[2];
 624   2      //                      detector_err[3] = ~detector_flag[3] | detector_err[3];
 625   2      //                      }
 626   2                      }
 627   1              }
 628          
 629          /*********************************************************************************************
 630          *       Ô­ÐÍ£ºvoid init_gm8125(void)
 631          *       ¹¦ÄÜ: ´®¿ÚÀ©Õ¹Ð¾Æ¬ GM8125 ³õÊ¼»¯
 632          *       ËµÃ÷£º
 633          *       ²ÎÊý£ºÎÞ
 634          *       ·µ»Ø£ºÎÞ
 635          *********************************************************************************************/
 636          void init_gm8125(void)
 637          {
 638   1      #ifdef single_mode
                      chip_uart_ms = 1;                               // ´®¿ÚÀ©Õ¹Ð¾Æ¬ÔÚµ¥Í¨µÀÄ£Ê½ÏÂ¹¤×÷
                      UART_CHANL = 0x09;                              // ´®¿Ú 0 ÔÚµ¥Í¨µÀÄ£Ê½ÏÂ£¬·¢ËÍºÍ½ÓÊÜ¶¼Í¨¹ý×Ó´®¿Ú 1 Íê³É
                      
                      TR2 = 0;                                                //                                                      230400  115200  76800   38400   19200   9600    7200    4800    2400    1200£¨Page 213£©
                      RCAP2L = 0xa0;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú    0xfd    0xfa    0xf7    0xee    0xdc    0xb8    0xa0    0x70    0xe0    0xc0
                      RCAP2H = 0xff;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷¸ß×Ö½Ú    0xff    0xff    0xff    0xff    0xff    0xff    0xff    0xff    0xfe    0xfd
                      TR2 = 1;
              #else 
 647   1              UART_CHANL = UART_CHANL & 0xc7;
 648   1              P4 = 0xc0;
 649   1              _nop_();
 650   1              _nop_();
 651   1              _nop_();
 652   1              _nop_();
 653   1              chip_uart_ms = 0;                               // ´®¿ÚÀ©Õ¹Ð¾Æ¬ÔÚ¶àÍ¨µÀÄ£Ê½ÏÂ¹¤×÷       
 654   1              _nop_();
 655   1              _nop_();
 656   1              _nop_();
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 12  

 657   1              _nop_();
 658   1              SBUF0 = 0xf3;                                   // ÉèÖÃGM8125×Ó´®¿Ú²¨ÌØÂÊÎª19200bps£¬Ä¸´®¿Ú²¨ÌØÂÊÎª115200bps 10Bit
 659   1              ES0 = 0;
 660   1              while(TI0 == 0); 
 661   1              TI0 = 0;
 662   1              delay_200us(50);
 663   1              chip_uart_ms = 1;                               // ¶ÁÃüÁî×Ö 
 664   1              while(RI0 == 0); 
 665   1              RI0 = 0;
 666   1              ReceiveBuff0 = SBUF0;   
 667   1              while (ReceiveBuff0!=0xf3) {    // ÑéÖ¤Ð´ÈëµÄÃüÁî×ÖÊÇ·ñÕýÈ·£¬²»ÕýÈ·ÔòÖØÐÂÐ´ 
 668   2                      ES0 = 0;
 669   2                      chip_uart_ms = 0;                       // GM8125¹¤×÷ÔÚÐ´ÃüÁî×Ö¹¤×÷Ä£Ê½ÏÂ
 670   2                      SBUF0 = 0xf3;
 671   2                      while(TI0 == 0); 
 672   2                      TI0=0; 
 673   2                      delay_200us(50); 
 674   2                      chip_uart_ms = 1;                       // ¶ÁÃüÁî×Ö 
 675   2                      while(RI0 == 0); 
 676   2                      RI0 = 0;
 677   2                      ReceiveBuff0 = SBUF0;
 678   2                      } 
 679   1              chip_uart_ms = 0;                               // ÉèÖÃGM8125¹¤×÷ÔÚ¶àÍ¨µÀ¹¤×÷Ä£Ê½ÏÂ
 680   1              
 681   1              comm_baud = B_9600;
 682   1              
 683   1              P2MDOUT = 0xff;                                 // ½« P2.7¡¢P2.6¡¢P2.5¡¢P2.4¡¢P2.3 P2.2 P2.1 P2.0 ÉèÖÃÎªÍÆÍì·½Ê½
 684   1              P2 = P2 | 0x08;                                 //
 685   1              P4 = 0xff;
 686   1              TR2 = 0;                                                //                                                              230400  115200  76800   38400   19200   9600    7200    4800    2400    1200£¨Page 213£©
 687   1              RCAP2L = 0xf4;                  //f4            // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú    0xfd    0xfa    0xf7    0xee    0xdc    0xb8    0xa0    0x70    0xe0    0xc0
 688   1              RCAP2H = 0xff;                                          // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷¸ß×Ö½Ú    0xff    0xff    0xff    0xff    0xff    0xff    0xff    0xff    0xfe    0xfd
 689   1              TR2 = 1;
 690   1              RI0 = 0;
 691   1              ES0 = 1;
 692   1      #endif  
 693   1              }
 694          
 695          /*********************************************************************************************
 696          *       Ô­ÐÍ£ºvoid delay_200us(unsigned char m)
 697          *       ¹¦ÄÜ: Èí¼þÑÓÊ±×Ó³ÌÐò
 698          *       ËµÃ÷£º
 699          *       ²ÎÊý£ºÎÞ
 700          *       ·µ»Ø£ºÎÞ
 701          *********************************************************************************************/
 702          void delay_200us(unsigned char m) 
 703          { 
 704   1      unsigned int n,i; 
 705   1              n=0; 
 706   1              while(n < m) {
 707   2                      for (i=0x00;i<137;i++) {
 708   3                              _nop_();
 709   3                              _nop_();
 710   3                              _nop_();
 711   3                              _nop_();
 712   3                              }
 713   2                      n++;
 714   2                      }
 715   1              return; 
 716   1              }
 717          
 718          /*********************************************************************************************
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 13  

 719          *       Ô­ÐÍ£ºvoid decode_key(void)
 720          *       ¹¦ÄÜ£º°´¼ü½âÂë
 721          *       ËµÃ÷£º¸ù¾Ý AD Öµ£¬Çø·Ö°´¼ü£¬²¢´¦ÀíÒ£¿ØÆ÷ÊäÈë
 722          *       ²ÎÊý£ºÎÞ
 723          *       ·µ»Ø£ºÎÞ
 724          *********************************************************************************************/
 725          void decode_key(void) 
 726          {
 727   1      unsigned char data ctemp0;
 728   1      unsigned char xdata *pchar;
 729   1              pchar = ADDRESS_TELECONTROL;
 730   1              ctemp0 = *pchar;
 731   1              ctemp0 = ctemp0 & 0x0f;
 732   1              if ((ctemp0 == 0x00) && (TELECONTROL_BAK == 0x0b)) TELECONTROL_BAK = 0x00;
 733   1              if ((ctemp0 != TELECONTROL_BAK) && (ctemp0 <= 0x0c) && (ctemp0 != 0x00)) {
 734   2                      TELECONTROL_BAK = ctemp0;
 735   2                      ctemp0 = 0x00;
 736   2                      switch (TELECONTROL_BAK) {                                      // Ò£¿Ø°´¼ü½âÂë
 737   3                              case 0x01:
 738   3                                      {
 739   4                                              f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 740   4                                              ctemp0 = 0x01;
 741   4                                              break;
 742   4                                      }
 743   3                              case 0x02: 
 744   3                                      {
 745   4                                              f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 746   4                                              ctemp0 = 0x02;
 747   4                                              break;
 748   4                                      }
 749   3                              case 0x03:
 750   3                                      {
 751   4                                              f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 752   4                                              ctemp0 = 0x03;
 753   4                                              break;
 754   4                                      }
 755   3                              case 0x04:
 756   3                                      {
 757   4                                              f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 758   4                                              ctemp0 = 0x04;
 759   4                                              break;
 760   4                                      }
 761   3                              case 0x05:
 762   3                                      {
 763   4                                              f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 764   4                                              ctemp0 = 0x05;
 765   4                                              if (!f_manual)
 766   4                                              {
 767   5                                                      f_manual = 1;
 768   5                                                      f_manual_auto = 1;                              // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
 769   5                                              }
 770   4                                              manual_set_stage = 1;
 771   4                                              f_manual_step= 1;
 772   4                                              break;
 773   4                                      }
 774   3                              case 0x06:
 775   3                                      {
 776   4                                              f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 777   4                                              ctemp0 = 0x06;
 778   4                                              if (!f_manual) 
 779   4                                              {
 780   5                                                      f_manual = 1;
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 14  

 781   5                                                      f_manual_auto = 1;                              // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
 782   5                                              }
 783   4                                              manual_set_stage = 2;
 784   4                                              f_manual_step = 1;
 785   4                                              break;
 786   4                                      }
 787   3                              case 0x07: 
 788   3                                      {
 789   4                                              f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 790   4                                              ctemp0 = 0x07;
 791   4                                              if (!f_manual)
 792   4                                              {
 793   5                                                      f_manual = 1;
 794   5                                                      f_manual_auto = 1;                              // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
 795   5                                              }
 796   4                                              manual_set_stage = 3;
 797   4                                              f_manual_step = 1;
 798   4                                              break;
 799   4                                      }
 800   3                              case 0x08:
 801   3                                      {
 802   4                                              f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 803   4                                              ctemp0 = 0x08;
 804   4                                              if (!f_manual)
 805   4                                        {
 806   5                                                      f_manual = 1;
 807   5                                                      f_manual_auto = 1;                              // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
 808   5                                              }
 809   4                                              manual_set_stage = 4;
 810   4                                              f_manual_step = 1;
 811   4                                              break;
 812   4                                      }
 813   3                              case 0x09:      {
 814   4                                      f_manual = 1;                                           // ÊÖ¶¯/×Ô¶¯Ñ¡Ôñ¿ª¹ØÒÑ´ò¿ª´¦ÓÚÊÖ¶¯×´Ì¬
 815   4                                      f_manual_auto = 1;                                      // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
 816   4                                      break;
 817   4                                      }
 818   3                              case 0x0a:      {
 819   4                                      f_manual = 0;                                           // ÊÖ¶¯/×Ô¶¯Ñ¡Ôñ¿ª¹ØÒÑ´ò¿ª´¦ÓÚ×Ô¶¯×´Ì¬
 820   4                                      f_manual_auto = 1;                                      // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
 821   4                                      break;
 822   4                                      }
 823   3                              case 0x0b:      f_step = 1;     break;                  // Ò»´ÎÓÐÐ§µÄ"²½½ø°´¼ü"
 824   3                              case 0x0c:      {
 825   4                                      f_manual = 0;                                           // ÊÖ¶¯/×Ô¶¯Ñ¡Ôñ¿ª¹ØÒÑ´ò¿ª´¦ÓÚ×Ô¶¯×´Ì¬
 826   4                                      f_manual_auto = 1;                                      // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
 827   4                                      break;
 828   4                                      }
 829   3                              default:break;
 830   3                              }
 831   2                      if (ctemp0 != 0x00) {
 832   3                              key0_val = ctemp0;
 833   3                              f_mode_switch = 1;
 834   3                              }
 835   2                      }
 836   1              if (f_key0_int) {                                                               // ¼üÅÌ 0 °´¼ü
 837   2                      f_key0_int = 0;
 838   2                      if (!f_key0_int_bak) {                                          // ¸Ã°´¼ü°´ÏÂºóµÄµÚÒ»´Î²ÉÑùÖµ
 839   3                              f_key0_int_bak = 1;
 840   3                              key_val0 = key0_adc0;
 841   3                              }
 842   2                      else {                                                                          // ¸Ã°´¼ü°´ÏÂºóµÄµÚ¶þ´Î²ÉÑùÖµ
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 15  

 843   3                              if (key_val0 > key0_adc0) ctemp0 = key_val0 - key0_adc0;
 844   3                              else ctemp0 = key0_adc0 - key_val0;
 845   3                              if (ctemp0 < 8) {                                       // °´¼ü°´ÏÂµÄ¶þ´Î²ÉÑùÖµ²îÖµÔÚºÏÀí·¶Î§¼´ÈÏÎªÎª±¾´Î°´¼üÓÐÐ§
 846   4                                      if (!f_key0_ed) {
 847   5                                              ctemp0 = 0xff;
 848   5      //                                      if ((41 < key0_adc0) & (key0_adc0 < 71)) ctemp0 = 0;                                 
 849   5      //                                      if ((77 < key0_adc0) & (key0_adc0  < 107)) ctemp0 = 1;
 850   5      //                                      if ((114 < key0_adc0) & (key0_adc0  < 154)) ctemp0 = 2;
 851   5      //                                      if ((186 < key0_adc0) & (key0_adc0  < 236)) ctemp0 = 3;
 852   5                                              
 853   5                                              if ((40 < key0_adc0) & (key0_adc0 < 78)) ctemp0 = 0;    
 854   5                                              if ((80 < key0_adc0) & (key0_adc0  < 120)) ctemp0 = 1;  
 855   5                                              if ((130 < key0_adc0) & (key0_adc0  < 191)) ctemp0 = 2; 
 856   5                                              if ((210 < key0_adc0) & (key0_adc0  <= 250)) ctemp0 = 3; 
 857   5                                              
 858   5                                              if (ctemp0 != 0xff) {           // Ò»´ÎÓÐÐ§µÄ"¼üÅÌ 0 °´¼ü"
 859   6                                                      key0_val = ctemp0;
 860   6                                                      f_mode_switch = 1;
 861   6                                                      f_buzz = 1;
 862   6                                                      led_bg = 1;                             // µãÁÁ LCD ±³¹â
 863   6                                                      f_key0_ed = 1;                  // Ä£ÄâÊäÈë 0 Ò»´ÎÓÐÐ§ÊäÈë
 864   6                                                      f_key1_ed = 0;
 865   6                                                      led_bg_count = 0;
 866   6                                                      f_run_mode = 1;                 // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 867   6                                                      }
 868   5                                              }
 869   4                                      }
 870   3                              else {
 871   4                                      f_key0_ed = 0;
 872   4                                      f_key0_int_bak = 0;     
 873   4                                      }
 874   3                              key_val0 = key0_adc0;
 875   3                              }
 876   2                      }
 877   1      
 878   1              if (f_key1_int) {                                                       // ¼üÅÌ 0 °´¼ü
 879   2                      f_key1_int = 0;
 880   2                      if (!f_key1_int_bak) {                                  // ¸Ã°´¼ü°´ÏÂºóµÄµÚÒ»´Î²ÉÑùÖµ
 881   3                              f_key1_int_bak = 1;
 882   3                              key_val1 = key1_adc0;
 883   3                              }
 884   2                      else {                                                                  // ¸Ã°´¼ü°´ÏÂºóµÄµÚ¶þ´Î²ÉÑùÖµ
 885   3                              if (key_val1 > key1_adc0) ctemp0 = key_val1 - key1_adc0;
 886   3                              else ctemp0 = key1_adc0 - key_val1;
 887   3                              if (ctemp0 < 8) {                                       // °´¼ü°´ÏÂµÄ¶þ´Î²ÉÑùÖµ²îÖµÔÚºÏÀí·¶Î§¼´ÈÏÎªÎª±¾´Î°´¼üÓÐÐ§
 888   4                                      if (!f_key1_ed) {
 889   5                                              ctemp0 = 0xff;
 890   5      
 891   5      //                                      if ((41 < key1_adc0) & (key1_adc0 < 71)) ctemp0 = 0;                                 
 892   5      //                                      if ((77 < key1_adc0) & (key1_adc0  < 107)) ctemp0 = 1;
 893   5      //                                      if ((114 < key1_adc0) & (key1_adc0  < 154)) ctemp0 = 2;
 894   5      //                                      if ((186 < key1_adc0) & (key1_adc0  < 236)) ctemp0 = 3;
 895   5      
 896   5      
 897   5                                              if ((40 < key1_adc0) & (key1_adc0 < 78)) ctemp0 = 0;    
 898   5                                              if ((80 < key1_adc0) & (key1_adc0  < 120)) ctemp0 = 1;  
 899   5                                              if ((130 < key1_adc0) & (key1_adc0  < 191)) ctemp0 = 2; 
 900   5                                              if ((210 < key1_adc0) & (key1_adc0  <= 250)) ctemp0 = 3; 
 901   5                                              if (ctemp0 != 0xff) {                                   // Ò»´ÎÓÐÐ§µÄ"¼üÅÌ 0 °´¼ü"
 902   6                                                      f_buzz = 1;
 903   6                                                      led_bg = 1;                                                     // µãÁÁ LCD ±³¹â
 904   6                                                      f_key0_ed = 0;
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 16  

 905   6                                                      f_key1_ed = 1;                                          // Ä£ÄâÊäÈë 1 Ò»´ÎÓÐÐ§ÊäÈë
 906   6                                                      led_bg_count = 0;
 907   6                                                      key0_val = ctemp0 + 4;
 908   6                                                      f_mode_switch = 1;
 909   6                                                      f_run_mode = 1;                                         // ÒÔÇ°Ãæ°åÉÏµÄÉè¶¨ÔËÐÐ
 910   6                                                      }
 911   5                                              }
 912   4                                      }
 913   3                              else {
 914   4                                      f_key1_ed = 0;
 915   4                                      f_key1_int_bak = 0;     
 916   4                                      }
 917   3                              key_val1 = key1_adc0;
 918   3                              }
 919   2                      }
 920   1      
 921   1      //1219  if (f_manual_use) {                                                                     // ÊÖ¶¯/×Ô¶¯Ñ¡Ôñ¿ª¹Ø
 922   1      //1219          if (!f_key2_int_bak) {                                                  // ¸Ã°´¼ü°´ÏÂºóµÄµÚÒ»´Î²ÉÑùÖµ
 923   1      //1219                  f_key2_int_bak = 1;
 924   1      //1219                  key_val2 = key2_adc0;
 925   1      //1219                  }
 926   1      //1219          else {                                                                                  // ¸Ã°´¼ü°´ÏÂºóµÄµÚ¶þ´Î²ÉÑùÖµ
 927   1      //1219                  if (key_val2 > key2_adc0) ctemp0 = key_val2 - key2_adc0;
 928   1      //1219                  else ctemp0 = key2_adc0 - key_val2;
 929   1      //1219                  if (ctemp0 < 8) {                                               // °´¼ü°´ÏÂµÄ¶þ´Î²ÉÑùÖµ²îÖµÔÚºÏÀí·¶Î§¼´ÈÏÎªÎª±¾´Î°´¼üÓÐÐ§               
 930   1      //1219                          if (!f_key2_ed) {
 931   1      //1219                                  f_buzz = 1;
 932   1      //1219                                  led_bg = 1;                                                     // µãÁÁ LCD ±³¹â
 933   1      //1219                                  f_key2_ed = 1;                                          // Ä£ÄâÊäÈë 2 Ò»´ÎÓÐÐ§ÊäÈë
 934   1      //1219                                  f_manual = 1;                                           // ÊÖ¶¯/×Ô¶¯Ñ¡Ôñ¿ª¹ØÒÑ´ò¿ª´¦ÓÚÊÖ¶¯×´Ì¬
 935   1      //1219                                  led_bg_count = 0;
 936   1      //1219                                  f_auto_buzz = 1;
 937   1      //1219                                  f_manual_bak = 1;
 938   1      //1219                                  
 939   1      //1219                                  manual_m_control_mode_bak = g_controller_status.m_actual_control_mode;          // ±£´æÊÖ¶¯Ç°µÄÊµ¼Ê¿ØÖÆ
             -Ä£Ê½
 940   1      //1219                                                                  
 941   1      //1219                                  }
 942   1      //1219                          }
 943   1      //1219                  else {
 944   1      //1219                          f_key2_ed = 0;
 945   1      //1219                          f_key2_int_bak = 0;     
 946   1      //1219                          }
 947   1      //1219                  key_val2 = key2_adc0;
 948   1      //1219                  }
 949   1      //1219          }
 950   1      //1219  else {
 951   1      //1219          if (f_manual_bak) {
 952   1      //1219                  f_manual_bak = 0;
 953   1      //1219//1026                    g_config.m_control_mode_selection.m_control_mode = MULTIPLE_SCHEDULE_CONTROL;
 954   1      //1219                  if ((manual_m_control_mode_bak == 4) || (manual_m_control_mode_bak == 5)) g_config.m_control_mode
             -_selection.m_control_mode = manual_m_control_mode_bak;
 955   1      //1219                  else g_config.m_control_mode_selection.m_control_mode = MULTIPLE_SCHEDULE_CONTROL;
 956   1      //1219                  
 957   1      //1219                  save_control_mode_selection();
 958   1      //1219                  }
 959   1      //1219          f_manual = 0;
 960   1      //1219          f_key2_ed = 0;
 961   1      //1219          f_key2_int_bak = 0;     
 962   1      //1219          if (f_auto_buzz) {
 963   1      //1219                  f_buzz = 1;
 964   1      //1219                  led_bg = 1;                                                                     // µãÁÁ LCD ±³¹â
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 17  

 965   1      //1219                  f_auto_buzz = 0;
 966   1      //1219                  led_bg_count = 0;
 967   1      //1219                  }
 968   1      //1219          }
 969   1      
 970   1              if (f_key2_int) {                                                                               // ÊÖ¶¯/×Ô¶¯Ñ¡Ôñ°´¼ü
 971   2                      f_key2_int = 0;
 972   2                      if (!f_key2_ed) {                                                                       // ÏÂÒ»´ÎÓÐÐ§µÄ"ÊÖ¶¯/×Ô¶¯Ñ¡Ôñ°´¼ü"±ØÐëÔÚ¸Ã°´¼üÊÍ·Åºó
 973   3                              if (!f_key2_int_bak) {                                                  // ¸Ã°´¼ü°´ÏÂºóµÄµÚÒ»´Î²ÉÑùÖµ
 974   4                                      f_key2_int_bak = 1;
 975   4                                      key_val2 = key2_adc0;
 976   4                                      }
 977   3                              else {                                                                                  // ¸Ã°´¼ü°´ÏÂºóµÄµÚ¶þ´Î²ÉÑùÖµ
 978   4                                      if (key_val2 > key2_adc0) ctemp0 = key_val2 - key2_adc0;
 979   4                                      else ctemp0 = key2_adc0 - key_val2;
 980   4                                      if (ctemp0 < 8) {                                                       // °´¼ü°´ÏÂµÄ¶þ´Î²ÉÑùÖµ²îÖµÔÚºÏÀí·¶Î§¼´ÈÏÎªÎª±¾´Î°´¼üÓÐÐ§
 981   5                                              f_buzz = 1;
 982   5                                              led_bg = 1;                                                             // µãÁÁ LCD ±³¹â
 983   5                                              f_key2_ed = 1;                                                  // Ä£ÄâÊäÈë 2 Ò»´ÎÓÐÐ§ÊäÈë
 984   5                                              led_bg_count = 0;
 985   5                                              f_manual = !f_manual;                                   // ÊÖ¶¯/×Ô¶¯×ª»»
 986   5                                              f_manual_auto = 1;                                              // ÊÖ¶¯/×Ô¶¯×ª»»Ò»´ÎÓÐÐ§
 987   5                                              }
 988   4                                      else key_val2 = key2_adc0;
 989   4                                      }
 990   3                              }
 991   2                      }
 992   1              else {                                                                                                  // ÊÖ¶¯/×Ô¶¯Ñ¡Ôñ°´¼üÒÑÊÍ·Å
 993   2                      f_key2_ed = 0;
 994   2                      f_key2_int_bak = 0;
 995   2                      }
 996   1      
 997   1              if (f_key3_int) {                                                                               // ²½½ø°´¼ü
 998   2                      f_key3_int = 0;
 999   2                      if (!f_key3_ed) {                                                                       // ÏÂÒ»´ÎÓÐÐ§µÄ"²½½ø°´¼ü"±ØÐëÔÚ¸Ã°´¼üÊÍ·Åºó
1000   3                              if (!f_key3_int_bak) {                                                  // ¸Ã°´¼ü°´ÏÂºóµÄµÚÒ»´Î²ÉÑùÖµ
1001   4                                      f_key3_int_bak = 1;
1002   4                                      key_val3 = key3_adc0;
1003   4                                      }
1004   3                              else {                                                                                  // ¸Ã°´¼ü°´ÏÂºóµÄµÚ¶þ´Î²ÉÑùÖµ
1005   4                                      if (key_val3 > key3_adc0) ctemp0 = key_val3 - key3_adc0;
1006   4                                      else ctemp0 = key3_adc0 - key_val3;
1007   4                                      if (ctemp0 < 8) {                                                       // °´¼ü°´ÏÂµÄ¶þ´Î²ÉÑùÖµ²îÖµÔÚºÏÀí·¶Î§¼´ÈÏÎªÎª±¾´Î°´¼üÓÐÐ§
1008   5                                              f_buzz = 1;
1009   5                                              led_bg = 1;                                                             // µãÁÁ LCD ±³¹â
1010   5                                              f_key3_ed = 1;                                                  // Ä£ÄâÊäÈë 7 Ò»´ÎÓÐÐ§ÊäÈë
1011   5                                              f_step = 1;                                                             // Ò»´ÎÓÐÐ§µÄ"²½½ø°´¼ü"
1012   5                                              led_bg_count = 0;
1013   5                                              }
1014   4                                      else key_val3 = key3_adc0;
1015   4                                      }
1016   3                              }
1017   2                      }
1018   1              else {                                                                                                  // ²½½ø°´¼üÒÑÊÍ·Å
1019   2                      f_key3_ed = 0;
1020   2                      f_key3_int_bak = 0;
1021   2                      }
1022   1      
1023   1              if (f_manual_auto) {                                                                    // ÊÖ¶¯/×Ô¶¯×ª»»Ðè´¦ÀíµÄÊý¾Ý
1024   2                      f_manual_auto = 0;
1025   2                      if (f_manual) {                                                                         // ±£´æÊÖ¶¯Ç°µÄÊµ¼Ê¿ØÖÆÄ£Ê½
1026   3                              manual_m_control_mode_bak = g_controller_status.m_actual_control_mode;          
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 18  

1027   3                              }
1028   2                      else {                                                                                          // »Ö¸´ÊÖ¶¯Ç°µÄÊµ¼Ê¿ØÖÆÄ£Ê½
1029   3                              if ((manual_m_control_mode_bak == 4) || (manual_m_control_mode_bak == 5)) g_config.m_control_mode_selec
             -tion.m_control_mode = manual_m_control_mode_bak;
1030   3                              else g_config.m_control_mode_selection.m_control_mode = MULTIPLE_SCHEDULE_CONTROL;
1031   3                              save_control_mode_selection();                                  // ±£´æµ±Ç°µÄ¿ØÖÆÄ£Ê½
1032   3      // 071213
1033   3                              if (g_config.m_control_mode_selection.m_control_mode == 5) 
1034   3                                         f_return_actuate_control = 1;
1035   3      // 071213
1036   3                              }
1037   2                      }
1038   1      //071210
1039   1      //071212        if (f_manual_step) {
1040   1      //071212                f_manual = 0;
1041   1      //071212                g_config.m_control_mode_selection.m_control_mode = MULTIPLE_SCHEDULE_CONTROL;           
1042   1      //071212                }
1043   1      //071210
1044   1              }
1045          
1046          /*********************************************************************************************
1047          *       Ô­ÐÍ£ºvoid scankey(void)
1048          *       ¹¦ÄÜ£º¼üÅÌÉ¨Ãè¡£Ö»´¦Àíµ¥¸ö°´¼ü£¬²»´¦Àí×éºÏ°´¼ü¡£Ã¿´Î°´¼üÓÐÐ§°´ÏÂÊ±£¬¸ù¾ÝÊ±¼ä³¤¶ÌÀ´È·¶¨
1049          *                 Æä¼üÖµ£¬°´ÏÂÊ±¼äÐ¡ÓÚ 1.2s Ê±£¬Îª»ù±¾¼üÖµ£¨°´¼üÌ§Æðºó²ÅÖ´ÐÐ¸Ã¼ü£©£¬³¬¹ý 1.2s Ê±£¬
1050          *                 Îª¸½¼Ó¼üÖµ£¨²»ÓÃµÈµ½¸Ã°´¼üÊÍ·Å²ÅÖ´ÐÐ£¬¶øÊÇÁ¢¼´Ö´ÐÐ£©¡£ÏÂÒ»¸ö°´¼ü±ØÐëÔÚÉÏÒ»¸ö°´¼ü
1051          *         ÊÍ·Åºó°´ÏÂ£¬²ÅÄÜ±»É¨Ãèµ½²¢±»Ö´ÐÐ¡£Èç¼¸¼üÍ¬Ê±°´ÏÂÊ±£¬Ö»ÓÐ×îºó°´ÏÂµÄÄÇ¸ö°´¼üÓÐÐ§¡£
1052          *       ËµÃ÷£ºÉ¨ÃèÏßÍ¨¹ýÐÞ¸Ä scan_table[i] À´Íê³É¡£
1053          *       ²ÎÊý£ºÎÞ
1054          *       ·µ»Ø£ºÎÞ
1055          *********************************************************************************************/
1056          void scankey(void)
1057          {
1058   1      unsigned char i,j,k,ctemp;
1059   1      unsigned char xdata *pchar;
1060   1              pchar = ADDRESS_keyboard;
1061   1              key_port = key_port & 0xf9;
1062   1              i = *pchar;
1063   1              if (i!=0xff) {
1064   2                      for (i=0;i<=1;i++) {
1065   3                              key_port = key_port | 0x06;
1066   3                              key_port = key_port & scan_table[i];            // i+1 ±íÊ¾É¨ÃèÏßµÄ¶àÉÙ
1067   3                              ctemp = *pchar;
1068   3                              j = (ctemp & 0x01) ^ 0x01;
1069   3                              if (j!=0) {
1070   4                                      k = 0;                                                                  // k+1 ±íÊ¾ÊäÈëÏßµÄ¶àÉÙ
1071   4                                      break;
1072   4                                      }
1073   3                              j = (ctemp & 0x02) ^ 0x02;
1074   3                              if (j!=0) {
1075   4                                      k = 1;
1076   4                                      break;
1077   4                                      }
1078   3                              j = (ctemp & 0x04) ^ 0x04;
1079   3                              if (j!=0) {
1080   4                                      k = 2;
1081   4                                      break;
1082   4                                      }
1083   3                              j = (ctemp & 0x08) ^ 0x08;
1084   3                              if (j!=0) {
1085   4                                      k = 3;
1086   4                                      break;
1087   4                                      }
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 19  

1088   3                              j = (ctemp & 0x10) ^ 0x10;
1089   3                              if (j!=0) {
1090   4                                      k = 4;
1091   4                                      break;
1092   4                                      }
1093   3                              j = (ctemp & 0x20) ^ 0x20;
1094   3                              if (j!=0) {
1095   4                                      k = 5;
1096   4                                      break;
1097   4                                      }
1098   3                              j = (ctemp & 0x40) ^ 0x40;
1099   3                              if (j!=0) {
1100   4                                      k = 6;
1101   4                                      break;
1102   4                                      }
1103   3                              j = (ctemp & 0x80) ^ 0x80;
1104   3                              if (j!=0) {
1105   4                                      k = 7;
1106   4                                      break;
1107   4                                      }
1108   3                              }
1109   2                      j = i*8 + k;
1110   2                      if (key_val_temp == j) {
1111   3                              key_time++;
1112   3                              if (key_count>=0x04) f_buzz = 1;        // ¼üÅÌ»º³åÇø×î¶àÔÝ´æ 4 ¸ö°´¼ü£¬Èç³¬¹ý 4 ¸öÔò²»½ÓÊÕÐÂµÄ°´¼ü£¬²¢±¨¾¯
1113   3                              if (!f_key_now) {
1114   4      //1024                          f_buzz = 1;
1115   4                                      led_bg = 1;                     // µãÁÁ LCD ±³¹â
1116   4                                      led_bg_count = 0;
1117   4                                      f_key_now = 1;                  // »ñµÃÒ»¸ö°´¼üÖµ£¬Ö±µ½¸Ã°´¼ü±»ÊÍ·Å
1118   4                                      key_val = key_table[j]; 
1119   4                                      }
1120   3                              else {
1121   4                                      if (key_time >= 0x88) {         // ³¤Ê±¼ä£¨³¬¹ý 0.68s Ê±£©°´Ä³Ò»°´¼ü¾Í¸³ÁíÒ»¼üÖµ
1122   5                                              key_time = 0xf4;
1123   5                                              if (!f_key && (key_count<0x04)) {       // ¼üÅÌ»º³åÇø×î¶àÔÝ´æ 4 ¸ö°´¼ü£¬Èç³¬¹ý 4 ¸öÔò²»½ÓÊÕÐÂµÄ°´¼ü£¬²¢±¨¾¯
1124   6                                                      f_key = 1;
1125   6                                                      f_buzz = 1;
1126   6                                                      key_count++;
1127   6                                                      key_buf[0] = key_val + 0x10;
1128   6                                                      if (key_buf[0] == 0x12) f_key_val = !f_key_val;
1129   6                                                      if (f_key_val) {
1130   7                                                              f_lamp_err = 0;                                                                                                                                         // ¸´Î»µÆ¹ÊÕÏ±êÖ¾Î»
1131   7                                                              f_lamp_yellow_err = 0;
1132   7                                                              f_lamp_green_or_red_err =0;                                                     
1133   7                                                              }
1134   6                                                      }
1135   5                                              }
1136   4                                      }
1137   3                              }                       
1138   2                      else {
1139   3                              key_time = 0x00;
1140   3                              key_val_temp = j;
1141   3                              }
1142   2                      }
1143   1              else {
1144   2                      key_time = 0x00;
1145   2                      key_val_temp = 0xe0;
1146   2                      if (f_key_now) {
1147   3                              f_key_now = 0;                          // °´¼ü±»ÊÍ·Å
1148   3                              if (!f_key && (key_count<0x04)) {       // ¼üÅÌ»º³åÇø×î¶àÔÝ´æ 4 ¸ö°´¼ü£¬Èç³¬¹ý 4 ¸öÔò²»½ÓÊÕÐÂµÄ°´¼ü£¬²¢±¨¾¯
1149   4      //                              key_buf = key_val;
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 20  

1150   4      
1151   4                                      key_count++;
1152   4                                      for (i=key_count;i>1;i--) key_buf[i-1] = key_buf[i-2];
1153   4                                      key_buf[0] = key_val;
1154   4                                      
1155   4                                      }
1156   3      
1157   3                              f_key = 0;
1158   3      //                      vm_mcu_send_key(&g_vm,key_val);
1159   3                              }
1160   2                      }       
1161   1              key_port = key_port | 0x06;
1162   1              }
1163          
1164          
1165          /*********************************************************************************************
1166          *       Ô­ÐÍ£ºint set_term_status(phase_t phase)
1167          *       ¹¦ÄÜ: ÉèÖÃÊä³ö¶Ë×ÓµÄ×´Ì¬
1168          *       ËµÃ÷£º
1169          *       ²ÎÊý£ºÎÞ                  
1170          *       ·µ»Ø£ºÎÞ                  
1171          *********************************************************************************************/
1172          int set_term_status(lamp_status_t* phase)
1173          {
1174   1      bit bit_temp;
1175   1      unsigned char data ctemp0,ctemp1,i,j,k,l,buff[3];
1176   1      unsigned char* pp;
1177   1      //      for(i=0; i<18; i++)     phase.m_output[i] = 0xaa;
1178   1              
1179   1              flick_count = 0x00;
1180   1              pp = phase;
*** WARNING C182 IN LINE 1180 OF MCU.C: pointer to different objects
1181   1              l = 0x00;
1182   1              bit_temp = 1;
1183   1              ctemp1 = 0x00;
1184   1              lamp_output_buffer[l] = 0x00;
1185   1              lamp_flick_buffer[l] = 0x00;
1186   1              for (i=0x00;i<(MAX_LAMP_NUM - 1)/4 + 1;) {
1187   2      
1188   2      // ¶Ë×ÓÓ³Éä     
1189   2                      if (bit_temp) {
1190   3                              bit_temp = 0;
1191   3                              buff[2] = (*(pp + i + 2) << 4) & 0xc0;
1192   3                              buff[1] = (*(pp + i + 1) << 4) & 0x30;
1193   3                              buff[0] = buff[1] | buff[2];
1194   3                              buff[2] = (*(pp + i + 1) >> 4) & 0x0c; 
1195   3                              buff[0] = buff[0] | buff[2];
1196   3                              buff[2] = (*(pp + i) >> 4) & 0x03; 
1197   3                              buff[0] = buff[0] | buff[2];
1198   3      
1199   3                              buff[1] = (*(pp + i + 2) << 2) & 0xc0;
1200   3                              buff[1] = buff[1] | ((*(pp + i + 2) << 4) & 0x30);
1201   3                              buff[2] = *(pp + i + 1) & 0x0c;
1202   3                              buff[1] = buff[1] | buff[2];
1203   3                              buff[2] = (*(pp + i + 2) >> 6) & 0x03;
1204   3                              buff[1] = buff[1] | buff[2];
1205   3              
1206   3                              buff[2] = ((*(pp + i) << 6) & 0xc0) | (*(pp + i + 1)  & 0x30);
1207   3                              buff[2] = buff[2] | ((*(pp + i) >> 4) & 0x0c) | ((*(pp  + i) >> 2) & 0x03);
1208   3                              }
1209   2      // ¶Ë×ÓÓ³Éä                     
1210   2      
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 21  

1211   2      //              k = *(pp + i);
1212   2                      k = buff[ctemp1];
1213   2                      for (j=0x00;j<4;j++) {
1214   3                              ctemp0 = k & 0xc0;
1215   3                              lamp_output_buffer[l] = lamp_output_buffer[l] << 1;
1216   3                              lamp_flick_buffer[l] = lamp_flick_buffer[l] << 1;
1217   3                              if (ctemp0 == 0x40) lamp_output_buffer[l] = lamp_output_buffer[l] | 0x01;
1218   3                              if (ctemp0 == 0x80) lamp_flick_buffer[l] = lamp_flick_buffer[l] | 0x01;
1219   3                              k = k << 2;
1220   3                              }
1221   2                      i++;
1222   2                      ctemp1++;
1223   2                      if (((ctemp1%2) != 0x00) & ((ctemp1%3) != 0x00)) {
1224   3                              l++;
1225   3                              lamp_flick_buffer[l] = 0x00;
1226   3                              lamp_output_buffer[l] = 0x00;
1227   3                              }
1228   2                      if ((ctemp1%3) == 0x00) {
1229   3                              bit_temp = 1;
1230   3                              l++;
1231   3                              ctemp1 = 0x00;
1232   3                              lamp_flick_buffer[l] = 0x00;
1233   3                              lamp_output_buffer[l] = 0x00;
1234   3                              }
1235   2                      }       
1236   1              return 0;
1237   1              }
1238          
1239          
1240          /*********************************************************************************************
1241          *       Ô­ÐÍ£ºvoid get_lamp_health_status(void)
1242          *       ¹¦ÄÜ: »ñÈ¡µÆµÄ¹ÊÕÏÐÅÏ¢
1243          *       ËµÃ÷£º0 Ã»¹ÊÕÏ£¬1±íÊ¾ÓÐ¹ÊÕÏ
1244          *       ²ÎÊý£ºÎÞ                  
1245          *       ·µ»Ø£ºÎÞ                  
1246          *********************************************************************************************/
1247          void get_lamp_health_status(void)
1248          {
1249   1      unsigned char i,j,k,ctemp1,ctemp2;
1250   1      unsigned char ctemp[((MAX_LAMP_NUM-1)/8)+1];
1251   1      static unsigned char lamp_health_count[((MAX_LAMP_NUM-1)/8)+1][8];              //,lamp_health_count_dly[((MAX_LAMP_NU
             -M-1)/8)+1][8];
1252   1      //      pp = health;
1253   1              j = 0x00;
1254   1              f_rd_lamp_input_now = 1;
1255   1              for (i=0x00;i<(MAX_LAMP_NUM - 1)/12 + 1;i++) {  // 
1256   2                      lamp_input_buffer[10][j] = lamp_input_buffer[0][j] & lamp_input_buffer[1][j] & lamp_input_buffer[2][j] &
             - lamp_input_buffer[3][j]
1257   2                                                                       & lamp_input_buffer[4][j] & lamp_input_buffer[5][j] & lamp_input_buffer[6][j] & lamp_input_buffer
             -[7][j]
1258   2                                                                       & lamp_input_buffer[8][j] & lamp_input_buffer[9][j];                   // & lamp_input_buffer[10][j] & lamp_input
             -_buffer[11][j]
1259   2      //                                                               & lamp_input_buffer[12][j] & lamp_input_buffer[13][j] & lamp_input_buffer[14][j] & lamp_input_b
             -uffer[15][j]
1260   2      //                                                               & lamp_input_buffer[16][j] & lamp_input_buffer[17][j] & lamp_input_buffer[18][j] & lamp_input_b
             -uffer[19][j];
1261   2                      lamp_input_buffer[10][j] = (~lamp_input_buffer[10][j]) ^ lamp_output_buffer1[j];
1262   2                      j++;
1263   2                      lamp_input_buffer[10][j] = lamp_input_buffer[0][j] & lamp_input_buffer[1][j] & lamp_input_buffer[2][j] &
             - lamp_input_buffer[3][j]
1264   2                                                                       & lamp_input_buffer[4][j] & lamp_input_buffer[5][j] & lamp_input_buffer[6][j] & lamp_input_buffer
             -[7][j]
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 22  

1265   2                                                                       & lamp_input_buffer[8][j] & lamp_input_buffer[9][j];                   // & lamp_input_buffer[10][j] & lamp_input
             -_buffer[11][j]
1266   2      //                                                               & lamp_input_buffer[12][j] & lamp_input_buffer[13][j] & lamp_input_buffer[14][j] & lamp_input_b
             -uffer[15][j]
1267   2      //                                                               & lamp_input_buffer[16][j] & lamp_input_buffer[17][j] & lamp_input_buffer[18][j] & lamp_input_b
             -uffer[19][j];
1268   2                      lamp_input_buffer[10][j] = (~lamp_input_buffer[10][j]) ^ lamp_output_buffer1[j];
1269   2                      j++;
1270   2                      }       
1271   1              f_rd_lamp_input_now = 0;
1272   1              k = 0x00;
1273   1      //      xxxx 1111  1111 1111
1274   1              for (i=0x00;i<(MAX_LAMP_NUM - 1)/8;i++) {                       // Ò»¿éµÆ¿Ø°åÓÐ 12 ¸öµÆ£¬¶Á»ØµÄ×´Ì¬Õ¼ÓÃ 12 Î»
1275   2      // ¶Ë×Ó·´Ó³Éä                   
1276   2                      ctemp1 = (lamp_input_buffer[10][k+1] << 2) & 0x08;                                              // ºì 1
1277   2                      ctemp1 = ctemp1 | ((lamp_input_buffer[10][k] << 2) & 0x04);              // »Æ 1
1278   2                      ctemp1 = ctemp1 | ((lamp_input_buffer[10][k+1] << 1) & 0x02);            // ÂÌ 1
1279   2                      ctemp1 = ctemp1 | ((lamp_input_buffer[10][k+1] >> 3) & 0x01);                   // ºì 2
1280   2                      
1281   2                      ctemp2 = (lamp_input_buffer[10][k] << 6) & 0x80;                         // »Æ 2
1282   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+1] << 4) & 0x40);            // ÂÌ 2
1283   2                      ctemp2 = ctemp2 | (lamp_input_buffer[10][k+1] & 0x20);                                  // ºì 3
1284   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k] << 2) & 0x10);                             // »Æ 3
1285   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+1] >> 1) & 0x08);                   // ÂÌ 3
1286   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+1] >> 5) & 0x04);                   // ºì 4
1287   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k] >> 2) & 0x02);                             // »Æ 4
1288   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+1] >> 6) & 0x01);                   // ÂÌ 4
1289   2                      
1290   2                      lamp_input_buffer[10][k] = ctemp1;
1291   2                      lamp_input_buffer[10][k+1] = ctemp2;
1292   2                      
1293   2                      ctemp1 = (lamp_input_buffer[10][k+3] << 2) & 0x08;                                              // ºì 1
1294   2                      ctemp1 = ctemp1 | ((lamp_input_buffer[10][k+2] << 2) & 0x04);            // »Æ 1
1295   2                      ctemp1 = ctemp1 | ((lamp_input_buffer[10][k+3] << 1) & 0x02);            // ÂÌ 1
1296   2                      ctemp1 = ctemp1 | ((lamp_input_buffer[10][k+3] >> 3) & 0x01);                   // ºì 2
1297   2                      
1298   2                      ctemp2 = (lamp_input_buffer[10][k+2] << 6) & 0x80;                       // »Æ 2
1299   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+3] << 4) & 0x40);            // ÂÌ 2
1300   2                      ctemp2 = ctemp2 | (lamp_input_buffer[10][k+3] & 0x20);                                  // ºì 3
1301   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+2] << 2) & 0x10);                   // »Æ 3
1302   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+3] >> 1) & 0x08);                   // ÂÌ 3
1303   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+3] >> 5) & 0x04);                   // ºì 4
1304   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+2] >> 2) & 0x02);                   // »Æ 4
1305   2                      ctemp2 = ctemp2 | ((lamp_input_buffer[10][k+3] >> 6) & 0x01);                   // ÂÌ 4
1306   2                      
1307   2                      lamp_input_buffer[10][k+2] = ctemp1;
1308   2                      lamp_input_buffer[10][k+3] = ctemp2;
1309   2      // ¶Ë×Ó·´Ó³Éä
1310   2      
1311   2                      j = lamp_input_buffer[10][k+1] >> 4;                            // ½« 2 ¿éµÆ¿Ø°åºÏ²¢Îª 3 ¸ö×Ö½Ú
1312   2                      ctemp[i] = (lamp_input_buffer[10][k] << 4) | j;
1313   2                      ctemp[i + 1] = lamp_input_buffer[10][k+1] << 4 | (lamp_input_buffer[10][k+2] & 0x0f);
1314   2                      ctemp[i + 2] = lamp_input_buffer[10][k+3];
1315   2      
1316   2      //w             j = lamp_input_buffer[10][k+1] >> 4;                            // ½« 2 ¿éµÆ¿Ø°åºÏ²¢Îª 3 ¸ö×Ö½Ú
1317   2      //w             *(pp + i) = (lamp_input_buffer[10][k] << 4) | j;
1318   2      //w             *(pp + i + 1) = lamp_input_buffer[10][k+1] << 4 | (lamp_input_buffer[10][k+2] & 0x0f);
1319   2      //w             *(pp + i + 2) = lamp_input_buffer[10][k+3];
1320   2                      i = i + 0x02;
1321   2                      k = k + 0x04;
1322   2                      }
1323   1      //      xxxx 1111  1111 1111
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 23  

1324   1      
1325   1      
1326   1      //w1031                         Ã¿¸ö¶Ë×ÓµÄÊä³ö×´Ì¬ÈôÔÚ 700ms ÄÚÁ¬Ðø³ö´í£¬¾ÍÈÏÎªÆäÓÐ¹ÊÕÏ 
1327   1              for (i=0x00;i<(MAX_LAMP_NUM - 1)/8 + 1;i++) {
1328   2                      ctemp1 = 0x80;
1329   2                      for (j=0x00;j<8;j++) {
1330   3                              if ((ctemp[i] & ctemp1) == 0x00) lamp_health_count[i][j] = 0x00;
1331   3                              else lamp_health_count[i][j]++;
1332   3                      if (!f_lamp_err) {                                                              // 
1333   4                                      if (lamp_health_count[i][j] < 0x0d) lamp_health_status[i] = lamp_health_status[i] & (~ctemp1);
1334   4                                      else {
1335   5                                              lamp_health_count[i][j]--;
1336   5                                              lamp_health_status[i] = lamp_health_status[i] | ctemp1;
1337   5                                              }
1338   4                                      }
1339   3                              else lamp_health_count[i][j] = 0x00;                    // µ±¼ì²âµ½¶Ë×ÓÓÐ¹ÊÕÏÊ±£¬¸´Î»ËùÓÐ¼ÆÊýÆ÷£¬±£Áô¶Ë×Ó¹ÊÕÏ×´Ì¬
1340   3                              ctemp1 = ctemp1 >> 1;
1341   3                              }
1342   2                      }       
1343   1      //w1031
1344   1      //w1031 return 0;
1345   1              }
1346          
1347          /*********************************************************************************************
1348          *       Ô­ÐÍ£ºvoid conflict_detect(void)
1349          *       ¹¦ÄÜ: ³åÍ»¼ì²â
1350          *       ËµÃ÷£º
1351          *       ²ÎÊý£ºÎÞ                  
1352          *       ·µ»Ø£ºÎÞ                  
1353          *********************************************************************************************/
1354          void conflict_detect(void)
1355          {
1356   1      unsigned char i,j,ctemp1,ctemp2;
1357   1              ctemp1 = 0x00;
1358   1              f_lamp_yellow_err = 0;
1359   1              f_lamp_green_or_red_err = 0;
1360   1              for (i=0x00;i<(MAX_LAMP_NUM - 1)/8 + 1;i++) {
1361   2                      if (lamp_health_status[i] != 0x00) {
1362   3                              ctemp2 = 0x80;
1363   3                              for (j=0x00;j<8;j++) {
1364   4                                      if ((lamp_health_status[i] & ctemp2) != 0x00) {                                                         // µ±Ç°¶Ë×ÓÓÐ¹ÊÕÏ
1365   5                                              f_lamp_err = 1;                                                                                                                 // µ±Ç°¶Ë×ÓÓÐ¹ÊÕÏ±êÖ¾Î»
1366   5                                              ctemp1 = 8 * i + j;
1367   5                                              if (is_term_connect_to_yellow(i+1) == 0x00) f_lamp_green_or_red_err = 1;// ºìµÆ»òÂÌµÆÓÐ¹ÊÕÏ
1368   5                                              else f_lamp_yellow_err = 1;                                                                                             // »ÆµÆÓÐ¹ÊÕÏ
1369   5      
1370   5      //                                      if ((lamp_output_buffer1[i] & ctemp2) != 0x00) {                                                // µ±Ç°¸Ã¶Ë×ÓÉè¶¨ÎªÁÁ
1371   5      //                                              
1372   5      //                                              }
1373   5      //                                      else {                                                                                                                                  // µ±Ç°¸Ã¶Ë×ÓÉè¶¨ÎªÃð
1374   5      //                                              if (is_term_connect_to_green(i+1) != 0x00) 
1375   5      //                                              }
1376   5                                              
1377   5                                              }
1378   4                                      ctemp2 = ctemp2 >> 1;
1379   4                                      }
1380   3                              
1381   3                              }
1382   2                      }
1383   1              }
1384          
1385          
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 24  

1386          
1387          
1388          /*********************************************************************************************
1389          *       Ô­ÐÍ£ºint get_lamp_health(lamp_health_t* health)
1390          *       ¹¦ÄÜ: »ñÈ¡µÆµÄ¹ÊÕÏÐÅÏ¢
1391          *       ËµÃ÷£º0 Ã»¹ÊÕÏ£¬1±íÊ¾ÓÐ¹ÊÕÏ
1392          *       ²ÎÊý£ºÎÞ                  
1393          *       ·µ»Ø£ºÎÞ                  
1394          *********************************************************************************************/
1395          int get_lamp_health(lamp_health_t* health)
1396          {
1397   1      unsigned char i;
1398   1      unsigned char xdata *pp;
1399   1              pp = health;
*** WARNING C182 IN LINE 1399 OF MCU.C: pointer to different objects
1400   1              for (i=0x00;i<(MAX_LAMP_NUM - 1)/8 + 1;i++) *(pp + i) = lamp_health_status[i];
1401   1              return 0;
1402   1              }
1403          
1404          /*********************************************************************************************
1405          *       Ô­ÐÍ£ºint get_detector_status(detector_status_t* status)
1406          *       ¹¦ÄÜ: »ñÈ¡¼ì²âÆ÷µÄ¼ì²âÐÅÏ¢
1407          *       ËµÃ÷£º0±íÊ¾Ã»³µ£¬1±íÊ¾ÓÐ³µ
1408          *       ²ÎÊý£ºÎÞ                  
1409          *       ·µ»Ø£ºÎÞ                  
1410          *********************************************************************************************/
1411          int get_detector_status(detector_status_t* status)
1412          {
1413   1      unsigned char data i;
1414   1      unsigned char xdata *pp,*qq;
1415   1              qq = status;
*** WARNING C182 IN LINE 1415 OF MCU.C: pointer to different objects
1416   1              pp = ADDRESS_74HC244M;
1417   1              for (i=0x00;i<4;i++) {
1418   2                      *(qq + i) = ~(*pp);
1419   2                      pp = pp + 0x200;
1420   2                      }
1421   1              return 1;
1422   1              }
1423          
1424          /*********************************************************************************************
1425          *       Ô­ÐÍ£ºint get_detector_health(detector_health_t* health)
1426          *       ¹¦ÄÜ: »ñÈ¡¼ì²âÆ÷µÄ¹ÊÕÏÐÅÏ¢
1427          *       ËµÃ÷£º
1428          *       ²ÎÊý£ºÎÞ                  
1429          *       ·µ»Ø£ºÎÞ                  
1430          *********************************************************************************************/
1431          int get_detector_health(detector_health_t* health)
1432          {
1433   1      unsigned char *pp;
1434   1              pp = health;
*** WARNING C182 IN LINE 1434 OF MCU.C: pointer to different objects
1435   1              *pp = detector_err[0];
1436   1              *(pp+1) = detector_err[1];
1437   1              *(pp+2) = detector_err[2];
1438   1              *(pp+3) = detector_err[3];
1439   1              return 0;
1440   1              }
1441          
1442          /*********************************************************************************************
1443          *       Ô­ÐÍ£ºint get_detector_counter(detector_counter_t* counter)
1444          *       ¹¦ÄÜ: »ñÈ¡¼ì²âÆ÷¼ÆÊýÖµ
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 25  

1445          *       ËµÃ÷£º¼ÆÊý·¶Î§Îª 0 -- 63
1446          *       ²ÎÊý£ºÎÞ                  
1447          *       ·µ»Ø£ºÎÞ                  
1448          *********************************************************************************************/
1449          int get_detector_counter(detector_counter_t* counter)
1450          {
1451   1      unsigned char data i,j,k,chanl_start;
1452   1      unsigned char xdata *pp,*pp1;
1453   1              pp1 = counter;
*** WARNING C182 IN LINE 1453 OF MCU.C: pointer to different objects
1454   1              j = 0x00;
1455   1              for (i=0x00;i<4;i++) {
1456   2                      chanl_start = check_chanl_7;
1457   2                      for (k = 0x00;k < 0x08;k++) {
1458   3                              pp = ADDRESS_82C55A_B + i * 0x200;
1459   3                              *pp = ~chanl_start;     
1460   3                              pp = ADDRESS_82C55A_A + i * 0x200;
1461   3                              *(pp1 + j) = *pp;
1462   3                              chanl_start = chanl_start >> 1;
1463   3                              j++;
1464   3                              }
1465   2                      }       
1466   1              return 0;
1467   1              }
1468          
1469          //061016/*********************************************************************************************
1470          //061016*       Ô­ÐÍ£ºclear_detector_counter(int detector)
1471          //061016*       ¹¦ÄÜ: Çå³ýÖ¸¶¨¼ì²âÆ÷µÄ¼ÆÊýÖµ
1472          //061016*       ËµÃ÷£º
1473          //061016*       ²ÎÊý£ºÎÞ                  
1474          //061016*       ·µ»Ø£ºÎÞ                  
1475          //061016*********************************************************************************************/
1476          //061016int clear_detector_counter(int detector)
1477          //061016{
1478          //061016unsigned char ctemp1,i,chanl_start;
1479          //061016unsigned char xdata *pp;
1480          //061016        ctemp1 = (char)detector;
1481          //061016        chanl_start = check_chanl_7;
1482          //061016        for (i=0x00;i<(ctemp1-1)%8;i++) chanl_start = chanl_start >> 1;
1483          //061016        pp = ADDRESS_82C55A_C + ((ctemp1 - 1) / 8) * 0x200;
1484          //061016        *pp = ~chanl_start;
1485          //061016        *pp = 0xff;                                                             // ½«¼ì²âÆ÷¸´Î»¶ËÇåÁã
1486          //061016        
1487          //061016        get_detector_counter(&detector_count_bak0);
1488          //061016        read_detector_time = 0x00;
1489          //061016        }
1490          
1491          /*********************************************************************************************
1492          *       Ô­ÐÍ£ºvoid in_init(int port)
1493          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1494          *       ËµÃ÷£º
1495          *       ²ÎÊý£ºÎÞ                  
1496          *       ·µ»Ø£ºÎÞ                  
1497          *********************************************************************************************/
1498          void in_init(int port)
1499          {
1500   1              g_in_read_p[port-1] = 0;
1501   1              g_in_write_p[port-1] = 0;
1502   1              }
1503          
1504          /*********************************************************************************************
1505          *       Ô­ÐÍ£ºint open_comm(int port)
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 26  

1506          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1507          *       ËµÃ÷£º
1508          *       ²ÎÊý£ºÎÞ                  
1509          *       ·µ»Ø£ºÎÞ                  
1510          *********************************************************************************************/
1511          void in_putchar(int port,unsigned char ch)
1512          {
1513   1              uart0_receive_buffer[port-1][g_in_write_p[port-1]++] = ch;
1514   1              if(g_in_write_p[port-1] == uart0_trans_max)
1515   1                      g_in_write_p[port-1] = 0;
1516   1              }
1517          
1518          /*********************************************************************************************
1519          *       Ô­ÐÍ£ºint open_comm(int port)
1520          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1521          *       ËµÃ÷£º
1522          *       ²ÎÊý£ºÎÞ                  
1523          *       ·µ»Ø£ºÎÞ                  
1524          *********************************************************************************************/
1525          unsigned char in_getchar(int port)
1526          {
1527   1              unsigned char ch;
1528   1              ch = uart0_receive_buffer[port - 1][g_in_read_p[port-1]++];
1529   1              if(g_in_read_p[port-1] == uart0_trans_max)
1530   1                      g_in_read_p[port-1] = 0;
1531   1              return ch;
1532   1              }
1533          
1534          //061016/*********************************************************************************************
1535          //061016*       Ô­ÐÍ£ºint open_comm(int port)
1536          //061016*       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1537          //061016*       ËµÃ÷£º
1538          //061016*       ²ÎÊý£ºÎÞ                  
1539          //061016*       ·µ»Ø£ºÎÞ                  
1540          //061016*********************************************************************************************/
1541          //061016int is_in_full(int port)
1542          //061016{
1543          //061016        if((g_in_write_p[port-1] + 1)%uart0_trans_max  == g_in_read_p[port-1])
1544          //061016                return 1;
1545          //061016        else
1546          //061016                return 0;
1547          //061016        }
1548          
1549          /*********************************************************************************************
1550          *       Ô­ÐÍ£ºint open_comm(int port)
1551          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1552          *       ËµÃ÷£º
1553          *       ²ÎÊý£ºÎÞ                  
1554          *       ·µ»Ø£ºÎÞ                  
1555          *********************************************************************************************/
1556          int is_in_empty(int port)
1557          {
1558   1              if(g_in_read_p[port-1] == g_in_write_p[port-1])
1559   1                      return 1;
1560   1              else
1561   1                      return 0;
1562   1              }
1563          
1564          /*********************************************************************************************
1565          *       Ô­ÐÍ£ºint open_comm(int port)
1566          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1567          *       ËµÃ÷£º
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 27  

1568          *       ²ÎÊý£ºÎÞ                  
1569          *       ·µ»Ø£ºÎÞ                  
1570          *********************************************************************************************/
1571          void out_init(int port)
1572          {
1573   1              g_out_read_p[port-1] = 0;
1574   1              g_out_write_p[port-1] = 0;
1575   1              }
1576          
1577          /*********************************************************************************************
1578          *       Ô­ÐÍ£ºint open_comm(int port)
1579          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1580          *       ËµÃ÷£º
1581          *       ²ÎÊý£ºÎÞ                  
1582          *       ·µ»Ø£ºÎÞ                  
1583          *********************************************************************************************/
1584          void out_putchar(int port,unsigned char ch)
1585          {
1586   1              uart0_trans_buffer[port-1][g_out_write_p[port-1]++] = ch;
1587   1      //      uart0_trans_buffer[port-1][g_out_write_p[port-1]++] = 0xaa;
1588   1              if(g_out_write_p[port-1] == uart0_trans_max)
1589   1                      g_out_write_p[port-1] = 0;
1590   1              }
1591          
1592          /*********************************************************************************************
1593          *       Ô­ÐÍ£ºint open_comm(int port)
1594          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1595          *       ËµÃ÷£º
1596          *       ²ÎÊý£ºÎÞ                  
1597          *       ·µ»Ø£ºÎÞ                  
1598          *********************************************************************************************/
1599          unsigned char out_getchar(int port)                              
1600          {
1601   1      unsigned char ch ;
1602   1              ch = uart0_trans_buffer[port - 1][g_out_read_p[port-1]++];
1603   1              if(g_out_read_p[port-1] == uart0_trans_max)
1604   1                      g_out_read_p[port-1] = 0;
1605   1              return ch;
1606   1              }
1607          
1608          /*********************************************************************************************
1609          *       Ô­ÐÍ£ºint open_comm(int port)
1610          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1611          *       ËµÃ÷£º
1612          *       ²ÎÊý£ºÎÞ                  
1613          *       ·µ»Ø£ºÎÞ                  
1614          *********************************************************************************************/
1615          int is_out_full(int port)
1616          {
1617   1              if((g_out_write_p[port-1] + 1)%uart0_trans_max  == g_out_read_p[port-1])
1618   1                      return 1;
1619   1              else
1620   1                      return 0;
1621   1              }
1622          
1623          /*********************************************************************************************
1624          *       Ô­ÐÍ£ºint open_comm(int port)
1625          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1626          *       ËµÃ÷£º
1627          *       ²ÎÊý£ºÎÞ                  
1628          *       ·µ»Ø£ºÎÞ                  
1629          *********************************************************************************************/
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 28  

1630          int is_out_empty(int port)
1631          {
1632   1              if(g_out_read_p[port-1] == g_out_write_p[port-1])
1633   1                      return 1;
1634   1              else
1635   1                      return 0;
1636   1              }
1637          
1638          /*********************************************************************************************
1639          *       Ô­ÐÍ£ºint open_comm(int port)
1640          *       ¹¦ÄÜ: ´ò¿ª fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú£¬³É¹¦·µ»Ø¸Ã fd£¬Ê§°Ü·µ»Ø -1
1641          *       ËµÃ÷£º
1642          *       ²ÎÊý£ºÎÞ                  
1643          *       ·µ»Ø£ºÎÞ                  
1644          *********************************************************************************************/
1645          int open_comm(int port)
1646          {
1647   1      unsigned char i,ctemp1,j;       
1648   1              i = (char)port;
1649   1              if (i<=6) {
1650   2                      j = g_config.m_comm_param[port-1].m_baud;
1651   2                      if (j == comm_baud) {                           // ºÍµ±Ç°²¨ÌØÂÊÒ»Ñù
1652   3                              in_init(port);
1653   3                              out_init(port);
1654   3                              ctemp1 = 0x01;
1655   3                              for (i=0x01;i<port;i++) ctemp1 = ctemp1 << 1;
1656   3                              flag1_uart0 = flag1_uart0 | ctemp1;                                                     // ½«¶ÔÓ¦¶Ë¿ÚÕýÔÚ½ÓÊÕÊý¾Ý±êÖ¾ÖÃÎ»
1657   3                              return port;
1658   3                              } 
1659   2                      else {                                                                                                                  // ºÍµ±Ç°²¨ÌØÂÊ²»Ò»Ñù£¬Ðè¸ü¸Ä
1660   3                              if (((flag0_uart0 & 0x1f) | (flag1_uart0 & 0x1f)) == 0x00) {// µ±Ç°´®¿Ú¶¼Ã»Ê¹ÓÃ£¬¿ÉÒÔ¸ü¸Ä²¨ÌØÂÊ
1661   4                                      
1662   4                                      UART_CHANL = UART_CHANL & 0xc7;                                                 // ½« STADD0 - STADD2 ÇåÁã
1663   4                                      P4 = 0xc0;                                                                                              // ½« SRADD0 - SRADD2 ÇåÁã
1664   4                                      _nop_();
1665   4                                      _nop_();
1666   4                                      _nop_();
1667   4                                      _nop_();
1668   4                                      chip_uart_ms = 0;                                                                               // ´®¿ÚÀ©Õ¹Ð¾Æ¬ÔÚ¶àÍ¨µÀÄ£Ê½ÏÂ¹¤×÷
1669   4                                      _nop_();
1670   4                                      _nop_();
1671   4                                      _nop_();
1672   4                                      _nop_();
1673   4                                      SBUF0 = 0xf0 | (g_config.m_comm_param[port-1].m_baud - 2);      // ÉèÖÃGM8125×Ó´®¿Ú²¨ÌØÂÊÎª1200 - 19200bps£
             -¬Ä¸´®¿Ú²¨ÌØÂÊÎª7200 - 115200bps 10Bit
1674   4                                      ES0 = 0;
1675   4                                      while(TI0 == 0); 
1676   4                                      TI0 = 0;
1677   4                                      delay_200us(50);
1678   4                                      chip_uart_ms = 1;                                                       // ¶ÁÃüÁî×Ö 
1679   4                                      while(RI0 == 0); 
1680   4                                      RI0 = 0;
1681   4                                      ReceiveBuff0 = SBUF0;
1682   4                                      ctemp1 = 0x00;
1683   4                                      while (ReceiveBuff0 != (0xf0 | (g_config.m_comm_param[port-1].m_baud - 2))) {   // ÑéÖ¤Ð´ÈëµÄÃüÁî×ÖÊÇ·ñ
             -ÕýÈ·£¬²»ÕýÈ·ÔòÖØÐÂÐ´ 
1684   5                                              ES0 = 0;
1685   5                                              chip_uart_ms = 0;                                       // GM8125¹¤×÷ÔÚÐ´ÃüÁî×Ö¹¤×÷Ä£Ê½ÏÂ
1686   5                                              SBUF0 = 0xf0 | (g_config.m_comm_param[port-1].m_baud - 2);
1687   5                                              while(TI0 == 0); 
1688   5                                              TI0=0; 
1689   5                                              delay_200us(50); 
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 29  

1690   5                                              chip_uart_ms = 1;                                       // ¶ÁÃüÁî×Ö 
1691   5                                              while(RI0 == 0); 
1692   5                                              RI0 = 0;
1693   5                                              ReceiveBuff0 = SBUF0;
1694   5                                              ctemp1++;
1695   5                                              if (ctemp1 > 0x0a) return -1;           // ÐÞ¸Ä²¨ÌØÂÊÊ§°Ü
1696   5                                              } 
1697   4                                      chip_uart_ms = 0;                               // ÉèÖÃGM8125¹¤×÷ÔÚ¶àÍ¨µÀ¹¤×÷Ä£Ê½ÏÂ
1698   4              
1699   4                                      P2MDOUT = 0xff;                                 // ½« P2.7¡¢P2.6¡¢P2.5¡¢P2.4¡¢P2.3 P2.2 P2.1 P2.0 ÉèÖÃÎªÍÆÍì·½Ê½
1700   4      //                              P2 = 0x08;                                              // 
1701   4                                      P2 = P2 | 0x08;
1702   4                                      P4 = 0xff;
1703   4                      
1704   4                                      ES0 = 0;                
1705   4                                      TR2 = 0;
1706   4                                      RCAP2H = 0xff;
1707   4                                      switch (g_config.m_comm_param[port-1].m_baud) {
1708   5                                              case B_1200:                                            //                                                              230400  115200  76800   57600   19200   9600    7200    4800    2400    1200£¨Page 213£©
1709   5                                                      RCAP2L = 0xa0;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú    0xfd    0xfa    0xf7    0xf4    0xdc    0xb8    0xa0    0x70    0xe0    0xc0
1710   5                                                      break;
1711   5                                              case B_2400:
1712   5                                                      RCAP2L = 0xd0;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú    0xfd    0xfa    0xf7    0xee    0xdc    0xb8    0xa0    0x70    0xe0    0xc0
1713   5                                                      break;
1714   5                                              case B_4800:
1715   5                                                      RCAP2L = 0xe8;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú    0xfd    0xfa    0xf7    0xee    0xdc    0xb8    0xa0    0x70    0xe0    0xc0
1716   5                                                      break;
1717   5                                              case B_9600:
1718   5                                                      RCAP2L = 0xf4;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú    0xfd    0xfa    0xf7    0xee    0xdc    0xb8    0xa0    0x70    0xe0    0xc0
1719   5                                                      break;          
1720   5                                              case B_19200:
1721   5                                                      RCAP2L = 0xfa;                                  // ¶¨Ê±Æ÷ 2 ²¶×½¼Ä´æÆ÷µÍ×Ö½Ú    0xfd    0xfa    0xf7    0xee    0xdc    0xb8    0xa0    0x70    0xe0    0xc0
1722   5                                                      break;
1723   5                                              default: RCAP2L = 0xf4;
1724   5                                              
1725   5                                              }                                                               
1726   4                                      TR2 = 1;
1727   4                                      ES0 = 1;
1728   4                                      in_init(port);
1729   4                                      out_init(port);
1730   4                                      ctemp1 = 0x01;
1731   4                                      for (i=0x01;i<port;i++) ctemp1 = ctemp1 << 1;
1732   4                                      flag1_uart0 = flag1_uart0 | ctemp1;                             // ½«¶ÔÓ¦¶Ë¿ÚÕýÔÚ½ÓÊÕÊý¾Ý±êÖ¾ÖÃÎ»
1733   4                                      comm_baud = g_config.m_comm_param[port-1].m_baud;
1734   4                                      return port;
1735   4                                      }
1736   3                              else return -1;                                                                         // µ±Ç°´®¿ÚÓÐÕýÔÚÊ¹ÓÃµÄ£¬²»¿ÉÒÔ¸ü¸Ä²¨ÌØÂÊ
1737   3                              }
1738   2                      }
1739   1              else {
1740   2                      if (i<=8) {
1741   3                              in_init(port);
1742   3                              out_init(port);
1743   3                              return port;
1744   3                              }
1745   2                      else return -1;
1746   2                      }
1747   1              }
1748          
1749          //061016/*********************************************************************************************
1750          //061016*       Ô­ÐÍ£ºint close_comm(int fd)
1751          //061016*       ¹¦ÄÜ: ¹Ø±Õ fd ¶ÔÓ¦µÄÍ¨ÐÅ¶Ë¿Ú
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 30  

1752          //061016*       ËµÃ÷£º
1753          //061016*       ²ÎÊý£ºÎÞ                  
1754          //061016*       ·µ»Ø£ºÎÞ                  
1755          //061016*********************************************************************************************/
1756          //061016int close_comm(int fd)
1757          //061016{
1758          //061016unsigned char i,ctemp1;
1759          //061016        i = (char)fd;
1760          //061016        if (i<=5) {
1761          //061016                ctemp1 = 0x01;
1762          //061016                for (i=0x01;i<fd;i++) ctemp1 = ctemp1 << 1;
1763          //061016                flag0_uart0 = ~ctemp1 & flag0_uart0;                            // ½«¶ÔÓ¦¶Ë¿ÚÕýÔÚ·¢ËÍÊý¾Ý±êÖ¾ÇåÁã
1764          //061016                flag1_uart0 = ~ctemp1 & flag1_uart0;                            // ½«¶ÔÓ¦¶Ë¿ÚÕýÔÚ½ÓÊÕÊý¾Ý±êÖ¾ÇåÁã               
1765          //061016//              return 0;
1766          //061016                }
1767          //061016        else {
1768          //061016                if (i==6) {
1769          //061016                        
1770          //061016                        }
1771          //061016                else {
1772          //061016                        if (i<=8) {
1773          //061016                                
1774          //061016                                }
1775          //061016                        else return -1;
1776          //061016                        }
1777          //061016                }
1778          //061016        return 0;       
1779          //061016        }
1780          
1781          /*********************************************************************************************
1782          *       Ô­ÐÍ£ºint read_comm(int fd,byte*  in_buffer, int size)
1783          *       ¹¦ÄÜ: ´Ó´®¿Ú x ¶ÁÈ¡Êý¾Ý
1784          *       ËµÃ÷£º
1785          *       ²ÎÊý£ºÎÞ                  
1786          *       ·µ»Ø£ºÎÞ                  
1787          *********************************************************************************************/
1788          int read_comm(int fd,byte*  in_buffer, int size)
1789          {
1790   1      unsigned char j;
1791   1      unsigned int i;
1792   1              if(size <1)     return size;
1793   1              j = (char)fd;   
1794   1              if (j <= 8) {                                                                   // 
1795   2                      if (j <= 5) ES0 = 0;                                            // ¹Ø´®¿Ú 0 ÖÐ¶Ï
1796   2                      else {
1797   3                              if (j==6) EIE2 = EIE2 & 0xbf;                   // ES1 = 0  ¹Ø´®¿Ú 1 ÖÐ¶Ï
1798   3                              else EX0 = 0;
1799   3                              }
1800   2                      
1801   2                      i=0;
1802   2                      while(!is_in_empty(fd)){
1803   3                              in_buffer[i++] = in_getchar(fd);
1804   3                              if(i==size)
1805   3                                      break;
1806   3                              }
1807   2                      
1808   2                      if (j <= 5) ES0 = 1;                                            // ¿ª´®¿Ú 0 ÖÐ¶Ï
1809   2                      else {
1810   3                              if (j==6) EIE2 = EIE2 | 0x40;                   // ES1 = 1 ¿ª´®¿Ú 1 ÖÐ¶Ï
1811   3                              else EX0 = 1;
1812   3                              }
1813   2      //              ES0 = 1;                                                                        // 
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 31  

1814   2                      } 
1815   1              else return -1;                                                                 // ½ÓÊÕ¶Ë¿Ú³¬¹ý 5 ³ö´í
1816   1              return i;                                                                               // ·µ»Ø¶Á»ØµÄ×Ö½ÚÊý
1817   1              }
1818          
1819          /*********************************************************************************************
1820          *       Ô­ÐÍ£ºint write_comm(int fd,byte* out_buffer, int size)
1821          *       ¹¦ÄÜ: Ïò´®¿Ú x Ð´Êý¾Ý
1822          *       ËµÃ÷£º
1823          *       ²ÎÊý£ºÎÞ                  
1824          *       ·µ»Ø£ºÎÞ                  
1825          *********************************************************************************************/
1826          int write_comm(int fd,byte* out_buffer, int size)
1827          {
1828   1      unsigned char j,ctemp1,k;
1829   1      unsigned char xdata * data pchar;
1830   1      unsigned int i;
1831   1              if(size < 1) return size;
1832   1              k = (char)fd;
1833   1              if (k>8) return -1;                                                                                     // ¶Ë¿Ú³¬¹ý 8 ³ö´í
1834   1              
1835   1              i=0;    
1836   1      
1837   1              EIE2 = EIE2 & 0xef;                                                                                     // ¹ØÍâ²¿ÖÐ¶Ï 6
1838   1              while(!is_out_full(fd)){
1839   2                      out_putchar(fd,out_buffer[i++]);
1840   2                      if(i==size)     break;
1841   2                      }
1842   1              EIE2 = EIE2 | 0x10;                                                                                     // ¿ªÍâ²¿ÖÐ¶Ï 6
1843   1      
1844   1      
1845   1              if (k <= 5) {                                                                                           // ´®¿Ú 0 À©Õ¹µÄ 5 ¸ö×Ó´®¿Ú
1846   2                      ctemp1 = 0x01;
1847   2                      for (j=0x01;j<fd;j++) ctemp1 = ctemp1 << 1;
1848   2                      if ((flag0_uart0 & 0x1f) == 0x00) {                                             // ¸÷×Ó´®¿Ú¶¼Ã»Êý¾Ý·¢ËÍ£¬ÒªÆô¶¯´®¿Ú
1849   3                              uart0_chanl_sel = fd << 3;
1850   3                              UART_CHANL = (UART_CHANL & 0xc7) | uart0_chanl_sel;     // Ñ¡ÔñÒª·¢ËÍµÄ¶Ë¿Ú
1851   3                              SBUF0 = uart0_trans_buffer[fd - 1][g_out_read_p[fd-1]++];
1852   3                              if(g_out_read_p[fd-1] == uart0_trans_max) g_out_read_p[fd-1] = 0;
1853   3      
1854   3                              }
1855   2                      flag0_uart0 = flag0_uart0 | ctemp1;                                             // ½«¶ÔÓ¦¶Ë¿ÚÓÐÊý¾Ý·¢ËÍ±êÖ¾ÖÃÎ»
1856   2                      }
1857   1              else {
1858   2                      switch (k) {
1859   3                              case 6:{                                                                                        // ´®¿Ú 1 
1860   4                                      if (!f_uart1_using) {
1861   5                                              SBUF1 = uart0_trans_buffer[5][g_out_read_p[5]++];
1862   5                                              if(g_out_read_p[5] == uart0_trans_max) g_out_read_p[5] = 0;             
1863   5                                              f_uart1_using = 1;
1864   5                                              }
1865   4                                      break;
1866   4                                      }
1867   3                              case 7:{                                                                                        // CPLD ¶Ë¿Ú 0
1868   4                                      if (!f_cpld_chanl0_using) {
1869   5                                              pchar = ADDRESS_PC_WR0;
1870   5                                              EIE2 = EIE2 & 0xef;                                                     // ¹ØÍâ²¿ÖÐ¶Ï 6         
1871   5                                              f_cpld_trans_num = 1;
1872   5                                              cpld_trans_bak = uart0_trans_buffer[6][g_out_read_p[6]++];
1873   5                                              *pchar = cpld_trans_bak;
1874   5                                              if(g_out_read_p[6] == uart0_trans_max) g_out_read_p[6] = 0;             
1875   5                                              EIE2 = EIE2 | 0x10;                                                     // ¿ªÍâ²¿ÖÐ¶Ï 6
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 32  

1876   5                                              f_cpld_chanl0_using = 1;
1877   5                                              cpld_count = 0x00;
1878   5                                              }
1879   4                                      break;
1880   4                                      }
1881   3                              default:{                                                                                       // CPLD ¶Ë¿Ú 1
1882   4                                      if (!f_cpld_chanl1_using) {
1883   5                                              pchar = ADDRESS_PC_WR1;
1884   5                                              EIE2 = EIE2 & 0xef;     
1885   5                                              f_cpld_trans_num = 0;
1886   5                                              cpld_trans_bak = uart0_trans_buffer[7][g_out_read_p[7]++];
1887   5                                              *pchar = cpld_trans_bak;
1888   5                                              if(g_out_read_p[7] == uart0_trans_max) g_out_read_p[7] = 0;     
1889   5                                              EIE2 = EIE2 | 0x10;     
1890   5                                              f_cpld_chanl1_using = 1;
1891   5                                              cpld_count = 0x00;
1892   5                                              }       
1893   4                                      }
1894   3                              }
1895   2                      } 
1896   1              return i;
1897   1              }
1898          
1899          /*********************************************************************************************
1900          *       Ô­ÐÍ£ºint is_manual_control_state()
1901          *       ¹¦ÄÜ: ÊÇ·ñ´¦ÓÚÊÖ¶¯¿ØÖÆ×´Ì¬
1902          *       ËµÃ÷£º
1903          *       ²ÎÊý£ºÎÞ                  
1904          *       ·µ»Ø£ºÎÞ                  
1905          *********************************************************************************************/
1906          int is_manual_control_state()
1907          {
1908   1              if (f_manual) return 1;
1909   1              else return 0;
1910   1              }
1911          
1912          /*********************************************************************************************
1913          *       Ô­ÐÍ£ºunsigned char get_front_panel_control_mode()
1914          *       ¹¦ÄÜ: Ç°Ãæ°åÉè¶¨µÄ¿ØÖÆÄ£Ê½
1915          *       ËµÃ÷£º
1916          *       ²ÎÊý£ºÎÞ                  
1917          *       ·µ»Ø£ºÎÞ                  
1918          *********************************************************************************************/
1919          unsigned char get_front_panel_control_mode()
1920          {
1921   1      unsigned char ctemp0;
1922   1      //      if (!f_manual) {
1923   1                      switch(key0_val) {
1924   2                              case 0: ctemp0 = ONLINE_HARMONY_CONTROL;break;                          // Áª»úÐ­µ÷¿ØÖÆ
1925   2                              case 1: ctemp0 = ALL_RED_CONTROL;break;                                         // È«ºì¿ØÖÆ
1926   2                              case 2: ctemp0 = YELLOW_FLASH_CONTROL;break;                            // »ÆÉÁ¿ØÖÆ
1927   2                              case 3: ctemp0 = MULTIPLE_SCHEDULE_CONTROL;break;                       // ¶à¶Î¿ØÖÆ
1928   2                              case 4: ctemp0 = ACTUATE_CONTROL;break;                                         // ¸ÐÓ¦¿ØÖÆ                     
1929   2                              case 5: ctemp0 = 0;break;                                                                       // ·µ»Ø
1930   2                              default : ctemp0 = 0;break;
1931   2                              }
1932   1                      if (ctemp0 != 0) g_config.m_control_mode_selection.m_control_mode = ctemp0;
1933   1                      
1934   1                      return ctemp0;
1935   1      //              }
1936   1      //      else return 0;
1937   1              }
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 33  

1938          
1939          /*********************************************************************************************
1940          *       Ô­ÐÍ£ºvoid front_panel_dis(unsigned char ch)
1941          *       ¹¦ÄÜ: Ç°Ãæ°å¿ØÖÆÄ£Ê½ÏÔÊ¾£¨led Ö¸Ê¾µÆ£©
1942          *       ËµÃ÷£º
1943          *       ²ÎÊý£ºÎÞ                  
1944          *       ·µ»Ø£ºÎÞ                  
1945          *********************************************************************************************/
1946          void front_panel_dis(unsigned char ch)
1947          {
1948   1      unsigned char ctemp0;
1949   1      unsigned char xdata * data pchar;
1950   1      static unsigned char mode_bak;
1951   1      // 060612
1952   1              if ((ch != mode_bak) | g_controller_status.m_is_degraded) {
1953   2                      mode_bak = ch;
1954   2                      f_key0_ed = 0;                                                                                                  // 
1955   2                      f_key1_ed = 0;
1956   2                      TELECONTROL_BAK = 0x00;
1957   2                      }
1958   1      // 060612
1959   1              switch(ch) {
1960   2                              case 1: ctemp0 = 0x40;break;                                                            // ÃðµÆ¿ØÖÆ
1961   2                              case 2: ctemp0 = 0x04;break;                                                            // È«ºì¿ØÖÆ
1962   2                              case 3: ctemp0 = 0x08;break;                                                            // »ÆÉÁ¿ØÖÆ
1963   2                              case 4: ctemp0 = 0x10;break;                                                            // ¶à¶Î¿ØÖÆ                     
1964   2                              case 5: ctemp0 = 0x20;break;                                                            // ¸ÐÓ¦¿ØÖÆ
1965   2      //                      case 6: ctemp0 = ;break;                                                                        // 
1966   2                              case 7: ctemp0 = 0x02;break;                                                            // Áª»úÐ­µ÷¿ØÖÆ
1967   2                              case 8: ctemp0 = 0x01;break;                                                            // ÊÖ¶¯¿ØÖÆ
1968   2                              default : ctemp0 = 0;break;
1969   2                      }
1970   1              pchar = ADDRESS_FRONT_PANEL;
1971   1              *pchar = ctemp0;
1972   1              }
1973          /*********************************************************************************************
1974          *       Ô­ÐÍ£ºint is_step_forward_button_pressed()
1975          *       ¹¦ÄÜ: ÊÇ·ñ°´ÁË²½½ø°´Å¥
1976          *       ËµÃ÷£º
1977          *       ²ÎÊý£ºÎÞ                  
1978          *       ·µ»Ø£ºÎÞ                  
1979          *********************************************************************************************/
1980          int is_step_forward_button_pressed()
1981          {
1982   1      //      if (f_manual) {
1983   1                      if (f_step) {
1984   2      //                      f_step = 0;
1985   2                              return 1;
1986   2                              }
1987   1      //              }
1988   1              return 0;
1989   1      }
1990          
1991          /*********************************************************************************************
1992          *       Ô­ÐÍ£ºint clear_step_forward_button_state()
1993          *       ¹¦ÄÜ: Çå³ý²½½ø°´Å¥×´Ì¬
1994          *       ËµÃ÷£º
1995          *       ²ÎÊý£ºÎÞ                  
1996          *       ·µ»Ø£ºÎÞ                  
1997          *********************************************************************************************/
1998          int clear_step_forward_button_state()
1999          {
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 34  

2000   1              f_step = 0;
2001   1              return 0;
2002   1      }
2003          /*********************************************************************************************
2004          *       Ô­ÐÍ£ºint is_need_change_stage()
2005          *       ¹¦ÄÜ: ÊÇ·ñÐèÒª¸Ä±äµ½ÏÂ¸ö×´Ì¬
2006          *       ËµÃ÷£º
2007          *       ²ÎÊý£ºÎÞ                  
2008          *       ·µ»Ø£ºÎÞ                  
2009          *********************************************************************************************/
2010          int is_need_change_stage()
2011          {
2012   1              if (f_manual)
2013   1              {
2014   2                      if (f_manual_step)
2015   2                      {
2016   3                              return 1;
2017   3                      }
2018   2              }
2019   1              return 0;
2020   1      }
2021          /*********************************************************************************************
2022          *       Ô­ÐÍ£ºint is_need_change_stage_pressed()
2023          *       ¹¦ÄÜ: 
2024          *       ËµÃ÷£º
2025          *       ²ÎÊý£ºÎÞ                  
2026          *       ·µ»Ø£ºÐèÒª¸Ä±äµ½µÄÏàÎ»Êý                  
2027          *********************************************************************************************/
2028          int get_manual_next_stage_count()
2029          {
2030   1              return manual_set_stage;
2031   1      }
2032          /*********************************************************************************************
2033          *       Ô­ÐÍ£ºint clear_need_change_stage_flag()
2034          *       ¹¦ÄÜ: Çå³ýÐèÒª¸Ä±äµ½ÏÂ¸öÏàÎ»µÄ±êÖ¾
2035          *       ËµÃ÷£º
2036          *       ²ÎÊý£ºÎÞ                  
2037          *       ·µ»Ø£ºÎÞ                  
2038          *********************************************************************************************/
2039          int clear_need_change_stage_flag()
2040          {
2041   1              f_manual_step = 0;
2042   1              return 0;
2043   1      }
2044          ///*********************************************************************************************
2045          //*     Ô­ÐÍ£ºunsigned int cal_crc(unsigned char *ptr, unsigned char len)
2046          //*     ¹¦ÄÜ: Íê³É CRC Ð£Ñé
2047          //*     ËµÃ÷£º
2048          //*     ²ÎÊý£ºÎÞ                  
2049          //*     ·µ»Ø£ºÎÞ                  
2050          //*********************************************************************************************/
2051          //unsigned int cal_crc(unsigned char *ptr, unsigned char len) 
2052          //{
2053          //unsigned int crc;
2054          //unsigned char da;
2055          //      crc=0;
2056          //      while(len--!=0) {
2057          //              da = ((char)(crc/256))/16;                                                      // ÔÝ´æCRC µÄ¸ßËÄÎ» 
2058          //              crc <<= 4;                                                                                      // CRC ÓÒÒÆ4 Î»£¬Ïàµ±ÓÚÈ¡CRC µÄµÍ12 Î»£©
2059          //              crc ^= crc_ta[da^(*ptr/16)];                                            // CRC µÄ¸ß4 Î»ºÍ±¾×Ö½ÚµÄÇ°°ë×Ö½ÚÏà¼Óºó²é
2060          //                                                                                                                      // ±í¼ÆËãCRC£¬È»ºó¼ÓÉÏÉÏÒ»´ÎCRC µÄÓàÊý
2061          //              da = ((char)(crc/256))/16;                                                      // ÔÝ´æCRC µÄ¸ß4 Î» 
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 35  

2062          //              crc <<= 4;                                                                                      // CRC ÓÒÒÆ4 Î»£¬ Ïàµ±ÓÚCRC µÄµÍ12 Î»£©
2063          //              crc ^= crc_ta[da^(*ptr&0x0f)];                                          // CRC µÄ¸ß4 Î»ºÍ±¾×Ö½ÚµÄºó°ë×Ö½ÚÏà¼Óºó²é
2064          //                                                                                                                      // ±í¼ÆËãCRC£¬È»ºóÔÙ¼ÓÉÏÉÏÒ»´ÎCRC µÄÓàÊý
2065          //              Ptr++;
2066          //              }
2067          //      return(crc);
2068          //      }
2069          
2070          // ÐÞ¸Ä¼ÍÂ¼
2071          // 071213 ÐÞ¸ÄÓÉ¸ÐÓ¦¿ØÖÆµ½ÊÖ¶¯£¬ÔÙÓÉÊÖ¶¯·µ»ØÊ±£¬²»¾­¹ý»ÆÉÁ¡¢È«ºì½×¶Î£¬¶øÊÇË³×ÅÔ­À´µÄË³Ðò
2072          // 071210 Ôö¼ÓÔ­À´ÓÉÒ£¿ØÆ÷¿ØÖÆÖ±½ÓÌøµ½Ä³¸öÂÌµÆ·ÅÐÐ²½Ê±£¬Ç°Ãæ¼ÓÉÏ»º³åÂÌÉÁ¡¢»ÆµÆ¡¢È«ºì½×¶Î
2073          // 070301 µ÷ÊÔÐÅºÅ»ú±³°å¡£Ã¿¸öµÆ¿Ø°å¡¢³µÁ¾¼ì²â°åÖÐµÄ 74HC244 ¼°³µÁ¾¼ì²â°åÖÐµÄ 82C55Æ¬Ñ¡¶¼Òª¼ÓÒ»¸öÉÏÀ­µç×è£
             -¬
2074          //        ·ñÔòÏµÍ³¿ØÖÆ°åÃ»µç»òÕß±³°åÓëÏµÍ³°åÃ»Á¬½ÓÊ±£¬ÕâÐ©Ð¾Æ¬µÄÆ¬Ñ¡Ðü¿Õ³ÊÏÖ²»¶¨×´Ì¬£¬Ôì³É×ÜÏß³åÍ»£¬Ê¹µçÁ÷
2075          //        ¼Ó´ó£¬³¤ÆÚ»áÊ¹²¿·ÖÐ¾Æ¬Ëð»µ¡£Ä¿Ç°£¬¸ÃÉÏÀ­µç×è¼ÓÔÚÏµÍ³°åÉÏ£¬×èÖµÎª 2K¡£µÆ¿Ø°å¡¢³µÁ¾¼ì²â°å¼ÓÉÏÀ­µç×
             -è
2076          //        Ê±£¬Ó¦¸Ã½«ÏµÍ³°åÉÏµÄÉÏÀ­µç×èÈ¡Ïû£¬»òÕßÏµÍ³°åÉÏµÄÉÏÀ­µç×èÈ¡½Ï´óµÄÖµ£¬Îª¶ÔÓ¦µÆ¿Ø°å¡¢³µÁ¾¼ì²â°åÉÏµÄ
             -ÉÏ
2077          //        À­µç×èÊ®±¶ÒÔÉÏ£¬ÈçµÆ¿Ø°å¡¢³µÁ¾¼ì²â°åÉÏµÄÉÏÀ­µç×èÈ¡2K£¬ÏµÍ³°åÉÏµÄÉÏÀ­µç×èÈ¡20K ÒÔÉÏ£¬·ñÔòÏµÍ³°åÍ£
             -µç
2078          //        Ê±£¬ÓÉÓÚÕâÁ½¸öµç×èµÄ·ÖÑ¹¹ØÏµ£¬»áÊ¹Æ¬Ñ¡¶ËµÄµçÑ¹À­³ÉµÍµçÆ½
2079          // 070203 Ç°Ãæ°å a /d ÊäÈë·ÖÑ¹µç×èÓÐ¸Ä±ä£¬R28¡¢R7 ÓÉ 1K ¸ÄÎª 2.7K£»R29¡¢R8ÓÉ1K ¸ÄÎª 4.3K
2080          // 070202 Ò£¿ØÆ÷¼ì²âÊäÈë 244 Æ¬Ñ¡Â©¼ÓÉÏÀ­µç×è£¬Ç°Ãæ°å×´Ì¬ÏÔÊ¾Çý¶¯ 373Æ¬Ñ¡Â©¼ÓÉÏÀ­µç×è
2081          // 061013 µ÷¿ìÂÌÉÁµÄÆµÂÊ£¨mcu.c ÓÐ¸Ä£©
2082          // 061011 Ôö¼ÓÒ£¿ØÆ÷¿ÉÖ±½Ó¿ØÖÆÄ³Ò»·½ÏòÂÌµÆ£¬¼´ÈÎºÎÇé¿öÏÂ£¬ÞôÒ»ÏÂÒ£¿ØÆ÷¶ÔÓ¦µÄ°´¼ü¼´¿ÉÒÔ·ÅÐÐ¶ÔÓ¦·½ÏòµÄ³µÁ÷
2083          // 061011 ÍË³öÊ±Ðè°´½â³ýÊÖ¶¯°´¼ü£¬×ªÎª×Ô¶¯¿ØÖÆ¼´¿É¡£Ö»ÄÜÓÃÓÚËÄÏàÎ»ºÍÁ½ÏàÎ»£¬ÇÒÏàÎ»²½±ØÐëÒÀ´ÎÊÇÈ«ºì¡¢ÂÌµÆ¡¢
2084          // 061011 ÂÌÉÁ¡¢»ÆµÆÊ±²Å¿ÉÒÔÓÃ£¨mcu.c ÓÐ¸Ä£©
2085          // 061010 ¸ÐÓ¦¿ØÖÆÊ±£¬²»ÅÐ¶Ï¶Ë×ÓºÅÎª 9 18 27 36 µÈÊÇ·ñ½ÓÂÌµÆ£¬ÕâÑù¿É½«ÕâÐ©¶Ë×ÓÉè³É³£ÂÌ¡£·ñÔò¸ÐÓ¦¿ØÖÆÊ±£¬
2086          // 061010 ÈÎºÎ¶Ë×Ó¶¼²»ÄÜÉèÎª³£ÂÌ£¨actuate_control.c ÓÐ¸Ä£©
2087          // 060615 ÐÞ¸ÄÔ­À´ÔÚÇ°¶ËÉèÖÃÎª"ÊÖ¶¯¿ØÖÆ"Ê±£¬ÖÐÐÄ¾ÍÎÞ·¨ÔÙ¸Ä±ä¿ØÖÆÄ£Ê½£¨smbus.c ÓÐ¸Ä£© 
2088          // 060613 Ôö¼ÓÃ¿´ÎÖ»ÒªÇ°¶Ë¿ØÖÆÄ£Ê½ÊäÈëÓÐÐ§Ê±£¬¾ÍÖØÐÂµ÷ÓÃ¸Ã¿ØÖÆÄ£Ê½µÄËã·¨£¨Ô¤ÉèÓëÊµ¼ÊÔËÐÐ¶¼Îª¸ÐÓ¦¿ØÖÆÊ±£¬²»
             -ÔÙÖØÐÐµ÷ÓÃ£¬
2089          // 060613 ÒòÎªÖØÐÐµ÷ÓÃ»áÓÐÈ«ºì³öÏÖ£©£¬Ô­À´Ö»ÓÐÔÚ¿ØÖÆÄ£Ê½¸Ä±äÊ±£¬²Åµ÷ÓÃ£¨mcu.c¡¢kernel.c ÓÐ¸Ä£©
2090          // 060612 ½«Ô­¼üÅÌÊäÈë£¨AD£© 0¡¢1 Ëø´æ£¬¸ÄÎª²»Ëø´æ£¬Ó²¼þ½« 74HC573(U4) µÄ LE ¶Ë¹Ì¶¨½Ó¸ßµçÆ½£¬Èí¼þÔòÔö¼ÓÃ¿´
             -ÎÄ£Ê½¸Ä±ä£¬
2091          // 060612 Çå³ýÉÏ´ÎÉè¶¨µÄ±êÖ¾Î»£¬ÇÒ´¦ÓÚ½µ¼¶ÔËÐÐÊ±£¬Ò²Çå³ý±êÖ¾Î»£¬ÎªÖØÐÂÊäÈëÓëÉÏ´ÎÔ¤ÉèÄ£Ê½ÏàÍ¬µÄ¿ØÖÆÄ£Ê½¡£
2092          
2093          // 060612 kernel /fb-linux.img ro root=/dev/hdb2 single vga=785 video=vesa:ypan init=/bin/sh
2094          // ¸´ÖÆ DOC ÅÌ·½·¨
2095          // cd /util
2096          // /util/bin/insmod doc.o
2097          // cp fla.img /dev/msys/fla 
2098          // sync
2099          
2100          
2101          // 071212
2102          //      int fun(int someVal);
2103          //      int main(){
2104          //      ¡¡fun(10);
2105          //      }
2106          //      È»¶øÄã¿ÉÄÜÐèÒªÔÚÄ³¸öÊ±¿Ì½«º¯ÊýÖ¸Õë±£´æÏÂÀ´£¬²¢ÔÚÒÔºóµÄÁíÒ»¸öÊ±¿Ìµ÷ÓÃËü£¬ÏñÕâÑù£º
2107          //      int fun(int);
2108          //      typedef int (*func_handle)(int);
2109          //      int main(){
2110          //      ¡¡func_handle fh=fun;
2111          //      ¡¡... //do something
2112          //      ¡¡fh(10);
2113          //      }
2114          //      Èç¹ûfunÐÎÊ½Îªvoid fun(int)ÄØ£¿ÈçÄãËù¼û£¬fun¿ÉÄÜÓÐÎÞÊýÖÖÐÎÊ½£¬¶ÔfunµÄÃ¿Ò»¸öÐÎÊ½¶¼typedefÒ»¸ö¶ÔÓ¦µÄfunc_h
             -andle
2115          // 071212
2116          
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 36  

2117          //
2118          //      º¯ÊýÃûÓëº¯ÊýÖ¸Õë                                                                                       
             -                                                                                                                     
2119          //                                                                                                             
             -                                                                                                                     
2120          //      Ò» Í¨³£µÄº¯Êýµ÷ÓÃ                                                                                      
             -                                                                                                                     
2121          //          Ò»¸öÍ¨³£µÄº¯Êýµ÷ÓÃµÄÀý×Ó£º                                                                         
             -                                                                                                                     
2122          //      //×ÔÐÐ°üº¬Í·ÎÄ¼þ                                                                                       
             -                                                                                                                     
2123          //      void MyFun(int x);    //´Ë´¦µÄÉêÃ÷Ò²¿ÉÐ´³É£ºvoid MyFun( int );                                         
             -                                                                                                                     
2124          //                                                                                                             
             -                                                                                                                     
2125          //      int main(int argc, char* argv[])                                                                       
             -                                                                                                                     
2126          //      {                                                                                                      
             -                                                                                                                     
2127          //         MyFun(10);     //ÕâÀïÊÇµ÷ÓÃMyFun(10);º¯Êý                                                           
             -                                                                                                                     
2128          //                                                                                                             
             -                                                                                                                     
2129          //            return 0;                                                                                        
             -                                                                                                                     
2130          //      }                                                                                                      
             -                                                                                                                     
2131          //                                                                                                             
             -                                                                                                                     
2132          //      void MyFun(int x)  //ÕâÀï¶¨ÒåÒ»¸öMyFunº¯Êý                                                             
             -                                                                                                                     
2133          //      {                                                                                                      
             -                                                                                                                     
2134          //         printf(¡°%d\n¡±,x);                                                                                 
             -                                                                                                                     
2135          //      }                                                                                                      
             -                                                                                                                     
2136          //          Õâ¸öMyFunº¯ÊýÊÇÒ»¸öÎÞ·µ»ØÖµµÄº¯Êý£¬Ëü²¢²»Íê³ÉÊ²Ã´ÊÂÇé¡£ÕâÖÖµ÷ÓÃº¯ÊýµÄ¸ñÊ½ÄãÓ¦¸ÃÊÇºÜÊìÏ¤µÄ°É£¡¿´Ö÷º¯
             -ÊýÖÐµ÷ÓÃMyFunº¯ÊýµÄÊéÐ´¸ñÊ½£º                                                                                        
2137          //      MyFun(10);                                                                                             
             -                                                                                                                     
2138          //          ÎÒÃÇÒ»¿ªÊ¼Ö»ÊÇ´Ó¹¦ÄÜÉÏ»òÕßËµ´ÓÊýÑ§ÒâÒåÉÏÀí½âMyFunÕâ¸öº¯Êý£¬ÖªµÀMyFunº¯ÊýÃû´ú±íµÄÊÇÒ»¸ö¹¦ÄÜ£¨»òÊÇËµÒ
             -»¶Î´úÂë£©¡£                                                                                                          
2139          //          Ö±µ½¡ª¡ª                                                                                           
             -                                                                                                                     
2140          //          Ñ§Ï°µ½º¯ÊýÖ¸Õë¸ÅÄîÊ±¡£ÎÒ²Å²»µÃ²»ÔÚË¼¿¼£ºº¯ÊýÃûµ½µ×ÓÖÊÇÊ²Ã´¶«Î÷ÄØ£¿                                 
             -                                                                                                                     
2141          //          £¨²»ÒªÒÔÎªÕâÊÇÃ»ÓÐÊ²Ã´ÒâÒåµÄÊÂàÞ£¡ºÇºÇ£¬¼ÌÐøÍùÏÂ¿´Äã¾ÍÖªµÀÁË¡££©                                   
             -                                                                                                                     
2142          //                                                                                                             
             -                                                                                                                     
2143          //      ¶þ º¯ÊýÖ¸Õë±äÁ¿µÄÉêÃ÷                                                                                  
             -                                                                                                                     
2144          //          ¾ÍÏóÄ³Ò»Êý¾Ý±äÁ¿µÄÄÚ´æµØÖ·¿ÉÒÔ´æ´¢ÔÚÏàÓ¦µÄÖ¸Õë±äÁ¿ÖÐÒ»Ñù£¬º¯ÊýµÄÊ×µØÖ·Ò²ÒÔ´æ´¢ÔÚÄ³¸öº¯ÊýÖ¸Õë±äÁ¿Àïµ
             -Ä¡£ÕâÑù£¬ÎÒ¾Í¿ÉÒÔÍ¨¹ýÕâ¸öº¯ÊýÖ¸Õë±äÁ¿À´µ÷ÓÃËùÖ¸ÏòµÄº¯ÊýÁË¡£                                                          
2145          //          ÔÚCÏµÁÐÓïÑÔÖÐ£¬ÈÎºÎÒ»¸ö±äÁ¿£¬×ÜÊÇÒªÏÈÉêÃ÷£¬Ö®ºó²ÅÄÜÊ¹ÓÃµÄ¡£ÄÇÃ´£¬º¯ÊýÖ¸Õë±äÁ¿Ò²Ó¦¸ÃÒªÏÈÉêÃ÷°É£¿ÄÇÓÖ
             -ÊÇÈçºÎÀ´ÉêÃ÷ÄØ£¿ÒÔÉÏÃæµÄÀý×ÓÎªÀý£¬ÎÒÀ´ÉêÃ÷Ò»¸ö¿ÉÒÔÖ¸ÏòMyFunº¯ÊýµÄº¯ÊýÖ¸Õë±äÁ¿FunP¡£ÏÂÃæ¾ÍÊÇÉêÃ÷FunP±äÁ¿µÄ·½·¨£º      
2146          //      void (*FunP)(int) ;   //Ò²¿ÉÐ´³Évoid (*FunP)(int x);                                                   
             -                                                                                                                     
2147          //          Äã¿´£¬Õû¸öº¯ÊýÖ¸Õë±äÁ¿µÄÉêÃ÷¸ñÊ½ÈçÍ¬º¯ÊýMyFunµÄÉêÃ÷´¦Ò»Ñù£¬Ö»²»¹ý¡ª¡ªÎÒÃÇ°ÑMyFun¸Ä³É£¨*FunP£©¶øÒÑ£¬
             -ÕâÑù¾ÍÓÐÁËÒ»¸öÄÜÖ¸ÏòMyFunº¯ÊýµÄÖ¸ÕëFunPÁË¡££¨µ±È»£¬Õâ¸öFunPÖ¸Õë±äÁ¿Ò²¿ÉÒÔÖ¸ÏòËùÓÐÆäËü¾ßÓÐÏàÍ¬²ÎÊý¼°·µ»ØÖµµÄº¯ÊýÁË¡££©
2148          //                                                                                                             
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 37  

             -                                                                                                                     
2149          //      Èý Í¨¹ýº¯ÊýÖ¸Õë±äÁ¿µ÷ÓÃº¯Êý                                                                            
             -                                                                                                                     
2150          //          ÓÐÁËFunPÖ¸Õë±äÁ¿ºó£¬ÎÒÃÇ¾Í¿ÉÒÔ¶ÔËü¸³ÖµÖ¸ÏòMyFun£¬È»ºóÍ¨¹ýFunPÀ´µ÷ÓÃMyFunº¯ÊýÁË¡£¿´ÎÒÈçºÎÍ¨¹ýFunPÖ¸Õ
             -ë±äÁ¿À´µ÷ÓÃMyFunº¯ÊýµÄ£º                                                                                             
2151          //      //×ÔÐÐ°üº¬Í·ÎÄ¼þ                                                                                       
             -                                                                                                                     
2152          //      void MyFun(int x);    //Õâ¸öÉêÃ÷Ò²¿ÉÐ´³É£ºvoid MyFun( int );                                           
             -                                                                                                                     
2153          //      void (*FunP)(int );   //Ò²¿ÉÉêÃ÷³Évoid(*FunP)(int x)£¬µ«Ï°¹ßÉÏÒ»°ã²»ÕâÑù¡£                             
             -                                                                                                                     
2154          //                                                                                                             
             -                                                                                                                     
2155          //      int main(int argc, char* argv[])                                                                       
             -                                                                                                                     
2156          //      {                                                                                                      
             -                                                                                                                     
2157          //         MyFun(10);     //ÕâÊÇÖ±½Óµ÷ÓÃMyFunº¯Êý                                                              
             -                                                                                                                     
2158          //         FunP=&MyFun;  //½«MyFunº¯ÊýµÄµØÖ·¸³¸øFunP±äÁ¿                                                       
             -                                                                                                                     
2159          //         (*FunP)(20);    //ÕâÊÇÍ¨¹ýº¯ÊýÖ¸Õë±äÁ¿FunPÀ´µ÷ÓÃMyFunº¯ÊýµÄ¡£                                       
             -                                                                                                                     
2160          //      }                                                                                                      
             -                                                                                                                     
2161          //                                                                                                             
             -                                                                                                                     
2162          //      void MyFun(int x)  //ÕâÀï¶¨ÒåÒ»¸öMyFunº¯Êý                                                             
             -                                                                                                                     
2163          //      {                                                                                                      
             -                                                                                                                     
2164          //         printf(¡°%d\n¡±,x);                                                                                 
             -                                                                                                                     
2165          //      }                                                                                                      
             -                                                                                                                     
2166          //          Çë¿´ºÚÌå×Ö²¿·ÖµÄ´úÂë¼°×¢ÊÍ¡£                                                                       
             -                                                                                                                     
2167          //          ÔËÐÐ¿´¿´¡£àÅ£¬²»´í£¬³ÌÐòÔËÐÐµÃºÜºÃ¡£                                                               
             -                                                                                                                     
2168          //          Å¶£¬ÎÒµÄ¸Ð¾õÊÇ£ºMyFunÓëFunPµÄÀàÐÍ¹ØÏµÀàËÆÓÚint Óëint *µÄ¹ØÏµ¡£º¯ÊýMyFunºÃÏñÊÇÒ»¸öÈçintµÄ±äÁ¿£¨»ò³£Á
             -¿£©£¬¶øFunPÔòÏñÒ»¸öÈçint *Ò»ÑùµÄÖ¸Õë±äÁ¿¡£                                                                           
2169          //      int i,*pi;                                                                                             
             -                                                                                                                     
2170          //      pi=&i;    //ÓëFunP=&MyFun±È½Ï¡£                                                                        
             -                                                                                                                     
2171          //          £¨ÄãµÄ¸Ð¾õÄØ£¿£©                                                                                   
             -                                                                                                                     
2172          //          ºÇºÇ£¬ÆäÊµ²»È»¡ª¡ª                                                                                 
             -                                                                                                                     
2173          //                                                                                                             
             -                                                                                                                     
2174          //      ËÄ µ÷ÓÃº¯ÊýµÄÆäËüÊéÐ´¸ñÊ½                                                                              
             -                                                                                                                     
2175          //      º¯ÊýÖ¸ÕëÒ²¿ÉÈçÏÂÊ¹ÓÃ£¬À´Íê³ÉÍ¬ÑùµÄÊÂÇé£º                                                               
             -                                                                                                                     
2176          //      //×ÔÐÐ°üº¬Í·ÎÄ¼þ                                                                                       
             -                                                                                                                     
2177          //      void MyFun(int x);                                                                                     
             -                                                                                                                     
2178          //      void (*FunP)(int );    //ÉêÃ÷Ò»¸öÓÃÒÔÖ¸ÏòÍ¬Ñù²ÎÊý£¬·µ»ØÖµº¯ÊýµÄÖ¸Õë±äÁ¿¡£                              
             -                                                                                                                     
2179          //                                                                                                             
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 38  

             -                                                                                                                     
2180          //      int main(int argc, char* argv[])                                                                       
             -                                                                                                                     
2181          //      {                                                                                                      
             -                                                                                                                     
2182          //         MyFun(10);     //ÕâÀïÊÇµ÷ÓÃMyFun(10);º¯Êý                                                           
             -                                                                                                                     
2183          //         FunP=MyFun;  //½«MyFunº¯ÊýµÄµØÖ·¸³¸øFunP±äÁ¿                                                        
             -                                                                                                                     
2184          //         FunP(20);    //ÕâÊÇÍ¨¹ýº¯ÊýÖ¸Õë±äÁ¿À´µ÷ÓÃMyFunº¯ÊýµÄ¡£                                              
             -                                                                                                                     
2185          //                                                                                                             
             -                                                                                                                     
2186          //            return 0;                                                                                        
             -                                                                                                                     
2187          //      }                                                                                                      
             -                                                                                                                     
2188          //                                                                                                             
             -                                                                                                                     
2189          //      void MyFun(int x)  //ÕâÀï¶¨ÒåÒ»¸öMyFunº¯Êý                                                             
             -                                                                                                                     
2190          //      {                                                                                                      
             -                                                                                                                     
2191          //         printf(¡°%d\n¡±,x);                                                                                 
             -                                                                                                                     
2192          //      }                                                                                                      
             -                                                                                                                     
2193          //      ÎÒ¸ÄÁËºÚÌå×Ö²¿·Ö£¨Çë×ÔÐÐÓëÖ®Ç°µÄ´úÂë±È½ÏÒ»ÏÂ£©¡£                                                       
             -                                                                                                                     
2194          //      ÔËÐÐÊÔÊÔ£¬°¡£¡Ò»ÑùµØ³É¹¦¡£                                                                             
             -                                                                                                                     
2195          //      ß×£¿                                                                                                   
             -                                                                                                                     
2196          //      FunP=MyFun;                                                                                            
             -                                                                                                                     
2197          //      ¿ÉÒÔÕâÑù½«MyFunÖµÍ¬¸³Öµ¸øFunP£¬ÄÑµÀMyFunÓëFunPÊÇÍ¬Ò»Êý¾ÝÀàÐÍ£¨¼´ÈçÍ¬µÄint ÓëintµÄ¹ØÏµ£©£¬¶ø²»ÊÇÈçÍ¬int 
             -Óëint*µÄ¹ØÏµÁË£¿£¨ÓÐÃ»ÓÐÒ»µãµãµÄºýÍ¿ÁË£¿£©                                                                           
2198          //      ¿´À´ÓëÖ®Ç°µÄ´úÂëÓÐµãÃ¬¶ÜÁË£¬ÊÇ°É£¡ËùÒÔÎÒËµÂï£¡                                                         
             -                                                                                                                     
2199          //      ÇëÈÝÐíÎÒÔÝ²»¸øÄã½âÊÍ£¬¼ÌÐø¿´ÒÔÏÂ¼¸ÖÖÇé¿ö£¨ÕâÐ©¿É¶¼ÊÇ¿ÉÒÔÕýÈ·ÔËÐÐµÄ´úÂëÓ´£¡£©£º                         
             -                                                                                                                     
2200          //      ´úÂëÖ®Èý£º                                                                                             
             -                                                                                                                     
2201          //      int main(int argc, char* argv[])                                                                       
             -                                                                                                                     
2202          //      {                                                                                                      
             -                                                                                                                     
2203          //         MyFun(10);     //ÕâÀïÊÇµ÷ÓÃMyFun(10);º¯Êý                                                           
             -                                                                                                                     
2204          //         FunP=&MyFun;  //½«MyFunº¯ÊýµÄµØÖ·¸³¸øFunP±äÁ¿                                                       
             -                                                                                                                     
2205          //         FunP(20);    //ÕâÊÇÍ¨¹ýº¯ÊýÖ¸Õë±äÁ¿À´µ÷ÓÃMyFunº¯ÊýµÄ¡£                                              
             -                                                                                                                     
2206          //                                                                                                             
             -                                                                                                                     
2207          //            return 0;                                                                                        
             -                                                                                                                     
2208          //      }                                                                                                      
             -                                                                                                                     
2209          //      ´úÂëÖ®ËÄ£º                                                                                             
             -                                                                                                                     
2210          //      int main(int argc, char* argv[])                                                                       
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 39  

             -                                                                                                                     
2211          //      {                                                                                                      
             -                                                                                                                     
2212          //         MyFun(10);     //ÕâÀïÊÇµ÷ÓÃMyFun(10);º¯Êý                                                           
             -                                                                                                                     
2213          //         FunP=MyFun;  //½«MyFunº¯ÊýµÄµØÖ·¸³¸øFunP±äÁ¿                                                        
             -                                                                                                                     
2214          //         (*FunP)(20);    //ÕâÊÇÍ¨¹ýº¯ÊýÖ¸Õë±äÁ¿À´µ÷ÓÃMyFunº¯ÊýµÄ¡£                                           
             -                                                                                                                     
2215          //                                                                                                             
             -                                                                                                                     
2216          //            return 0;                                                                                        
             -                                                                                                                     
2217          //      }                                                                                                      
             -                                                                                                                     
2218          //      ÕæµÄÊÇ¿ÉÒÔÕâÑùµÄàÞ£¡                                                                                   
             -                                                                                                                     
2219          //      £¨ÍÛ£¡ÕæÊÇÒªÔÎµ¹ÁË£¡£©                                                                                 
             -                                                                                                                     
2220          //      »¹ÓÐÄÅ£¡¿´¡ª¡ª                                                                                         
             -                                                                                                                     
2221          //      int main(int argc, char* argv[])                                                                       
             -                                                                                                                     
2222          //      {                                                                                                      
             -                                                                                                                     
2223          //         £¨*MyFun£©(10);     //¿´£¬º¯ÊýÃûMyFunÒ²¿ÉÒÔÓÐÕâÑùµÄµ÷ÓÃ¸ñÊ½                                         
             -                                                                                                                     
2224          //                                                                                                             
             -                                                                                                                     
2225          //            return 0;                                                                                        
             -                                                                                                                     
2226          //      }                                                                                                      
             -                                                                                                                     
2227          //      ÄãÒ²ÐíµÚÒ»´Î¼ûµ½°É£ºº¯ÊýÃûµ÷ÓÃÒ²¿ÉÒÔÊÇÕâÑùÐ´µÄ°¡£¡£¨Ö»²»¹ýÎÒÃÇÆ½³£Ã»ÓÐÕâÑùÊéÐ´°ÕÁË¡££©                 
             -                                                                                                                     
2228          //      ÄÇÃ´£¬ÕâÐ©ÓÖËµÃ÷ÁËÊ²Ã´ÄØ£¿                                                                             
             -                                                                                                                     
2229          //      ºÇºÇ£¡¼ÙÊ¹ÎÒÊÇ¡°¸£¶ûÄ¦Ë¹¡±£¬ÒÀ¾ÝÒÔÍùµÄÖªÊ¶ºÍ¾­ÑéÀ´ÍÆÀí±¾ÆªµÄ¡°ÐÂ·¢ÏÖ¡±£¬±Ø¶¨»áÓÉ´Ë·ÖÎö²¢ÍÆ¶Ï³öÒÔÏÂµÄ½áÂ
             -Û£º                                                                                                                  
2230          //      1. ÆäÊµ£¬MyFunµÄº¯ÊýÃûÓëFunPº¯ÊýÖ¸Õë¶¼ÊÇÒ»ÑùµÄ£¬¼´¶¼ÊÇº¯ÊýÖ¸Õë¡£MyFunº¯ÊýÃûÊÇÒ»¸öº¯ÊýÖ¸Õë³£Á¿£¬¶øFunPÊÇ
             -Ò»¸öº¯ÊýÊýÖ¸Õë±äÁ¿£¬ÕâÊÇËüÃÇµÄ¹ØÏµ¡£                                                                                 
2231          //      2. µ«º¯ÊýÃûµ÷ÓÃÈç¹û¶¼µÃÈç(*MyFun)(10)£»ÕâÑù£¬ÄÇÊéÐ´Óë¶ÁÆðÀ´¶¼ÊÇ²»·½±ãºÍ²»Ï°¹ßµÄ¡£ËùÒÔCÓïÑÔµÄÉè¼ÆÕßÃÇ²Å»
             -áÉè¼Æ³ÉÓÖ¿ÉÔÊÐíMyFun(10);ÕâÖÖÐÎÊ½µØµ÷ÓÃ£¨ÕâÑù·½±ã¶àÁË²¢ÓëÊýÑ§ÖÐµÄº¯ÊýÐÎÊ½Ò»Ñù£¬²»ÊÇÂð£¿£©¡£                          
2232          //      3. ÎªÍ³Ò»Æð¼û£¬FunPº¯ÊýÖ¸Õë±äÁ¿Ò²¿ÉÒÔFunP(10)µÄÐÎÊ½À´µ÷ÓÃ¡£                                            
             -                                                                                                                     
2233          //      4. ¸³ÖµÊ±£¬¼´¿ÉFunP=&MyFunÐÎÊ½£¬Ò²¿ÉFunP=MyFun¡£                                                       
             -                                                                                                                     
2234          //      ÉÏÊö´úÂëµÄÐ´·¨£¬Ëæ±ãÄã°®ÔõÃ´×Å£¡                                                                       
             -                                                                                                                     
2235          //      ÇëÕâÑùÀí½â°É£¡Õâ¿ÉÊÇÓÐÖúÓÚÄã¶Ôº¯ÊýÖ¸ÕëµÄÓ¦ÓÃà¶£¡                                                       
             -                                                                                                                     
2236          //      ×îºó¡ª¡ª                                                                                               
             -                                                                                                                     
2237          //      ²¹³äËµÃ÷Ò»µã£ºÔÚº¯ÊýµÄÉêÃ÷´¦£º                                                                         
             -                                                                                                                     
2238          //      void MyFun(int );    //²»ÄÜÐ´³Évoid (*MyFun)(int )¡£                                                   
             -                                                                                                                     
2239          //      void (*FunP)(int );   //²»ÄÜÐ´³Évoid FunP(int )¡£                                                      
             -                                                                                                                     
2240          //      £¨Çë¿´×¢ÊÍ£©ÕâÒ»µãÊÇÒª×¢ÒâµÄ¡£                                                                         
             -                                                                                                                     
2241          //                                                                                                             
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 40  

             -                                                                                                                     
2242          //      Îå ¶¨ÒåÄ³Ò»º¯ÊýµÄÖ¸ÕëÀàÐÍ£º                                                                            
             -                                                                                                                     
2243          //      ¾ÍÏñ×Ô¶¨ÒåÊý¾ÝÀàÐÍÒ»Ñù£¬ÎÒÃÇÒ²¿ÉÒÔÏÈ¶¨ÒåÒ»¸öº¯ÊýÖ¸ÕëÀàÐÍ£¬È»ºóÔÙÓÃÕâ¸öÀàÐÍÀ´ÉêÃ÷º¯ÊýÖ¸Õë±äÁ¿¡£         
             -                                                                                                                     
2244          //      ÎÒÏÈ¸øÄãÒ»¸ö×Ô¶¨ÒåÊý¾ÝÀàÐÍµÄÀý×Ó¡£                                                                     
             -                                                                                                                     
2245          //      typedef int* PINT;    //Îªint* ÀàÐÍ¶¨ÒåÁËÒ»¸öPINTµÄ±ðÃû                                                
             -                                                                                                                     
2246          //      int main()                                                                                             
             -                                                                                                                     
2247          //      {                                                                                                      
             -                                                                                                                     
2248          //        int x;                                                                                               
             -                                                                                                                     
2249          //        PINT px=&x;   //Óëint * px=&x;ÊÇµÈ¼ÛµÄ¡£PINTÀàÐÍÆäÊµ¾ÍÊÇint * ÀàÐÍ                                   
             -                                                                                                                     
2250          //        *px=10;       //px¾ÍÊÇint*ÀàÐÍµÄ±äÁ¿                                                                 
             -                                                                                                                     
2251          //        return 0;                                                                                            
             -                                                                                                                     
2252          //      }                                                                                                      
             -                                                                                                                     
2253          //      ¸ù¾Ý×¢ÊÍ£¬Ó¦¸Ã²»ÄÑ¿´¶®°É£¡£¨ËäÈ»Äã¿ÉÄÜºÜÉÙÕâÑù¶¨ÒåÊ¹ÓÃ£¬µ«ÒÔºóÑ§Ï°Win32±à³ÌÊ±»á¾­³£¼ûµ½µÄ¡££©          
             -                                                                                                                     
2254          //      ÏÂÃæÎÒÃÇÀ´¿´Ò»ÏÂº¯ÊýÖ¸ÕëÀàÐÍµÄ¶¨Òå¼°Ê¹ÓÃ£º£¨ÇëÓëÉÏ¶ÔÕÕ£¡£©                                             
             -                                                                                                                     
2255          //      //×ÔÐÐ°üº¬Í·ÎÄ¼þ                                                                                       
             -                                                                                                                     
2256          //      void MyFun(int x);    //´Ë´¦µÄÉêÃ÷Ò²¿ÉÐ´³É£ºvoid MyFun( int );                                         
             -                                                                                                                     
2257          //      typedef void (*FunType)(int );   //ÕâÑùÖ»ÊÇ¶¨ÒåÒ»¸öº¯ÊýÖ¸ÕëÀàÐÍ                                        
             -                                                                                                                     
2258          //      FunType FunP;              //È»ºóÓÃFunTypeÀàÐÍÀ´ÉêÃ÷È«¾ÖFunP±äÁ¿                                       
             -                                                                                                                     
2259          //                                                                                                             
             -                                                                                                                     
2260          //      int main(int argc, char* argv[])                                                                       
             -                                                                                                                     
2261          //      {                                                                                                      
             -                                                                                                                     
2262          //      //FunType FunP;    //º¯ÊýÖ¸Õë±äÁ¿µ±È»Ò²ÊÇ¿ÉÒÔÊÇ¾Ö²¿µÄ £¬ÄÇ¾ÍÇëÔÚÕâÀïÉêÃ÷ÁË¡£                           
             -                                                                                                                     
2263          //         MyFun(10);                                                                                          
             -                                                                                                                     
2264          //         FunP=&MyFun;                                                                                        
             -                                                                                                                     
2265          //         (*FunP)(20);                                                                                        
             -                                                                                                                     
2266          //                                                                                                             
             -                                                                                                                     
2267          //            return 0;                                                                                        
             -                                                                                                                     
2268          //      }                                                                                                      
             -                                                                                                                     
2269          //                                                                                                             
             -                                                                                                                     
2270          //      void MyFun(int x)                                                                                      
             -                                                                                                                     
2271          //      {                                                                                                      
             -                                                                                                                     
2272          //         printf(¡°%d\n¡±,x);                                                                                 
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 41  

             -                                                                                                                     
2273          //      }                                                                                                      
             -                                                                                                                     
2274          //                                                                                                             
             -                                                                                                                     
2275          //      ¿´ºÚÌå²¿·Ö£º                                                                                           
             -                                                                                                                     
2276          //      Ê×ÏÈ£¬ÔÚvoid (*FunType)(int ); Ç°¼ÓÁËÒ»¸ötypedef ¡£ÕâÑùÖ»ÊÇ¶¨ÒåÒ»¸öÃûÎªFunTypeº¯ÊýÖ¸ÕëÀàÐÍ£¬¶ø²»ÊÇÒ»¸öF
             -unType±äÁ¿¡£                                                                                                         
2277          //      È»ºó£¬FunType FunP;  Õâ¾ä¾ÍÈçPINT px;Ò»ÑùµØÉêÃ÷Ò»¸öFunP±äÁ¿¡£                                          
             -                                                                                                                     
2278          //      ÆäËüÏàÍ¬¡£Õû¸ö³ÌÐòÍê³ÉÁËÏàÍ¬µÄÊÂ¡£                                                                     
             -                                                                                                                     
2279          //      ÕâÑù×ö·¨µÄºÃ´¦ÊÇ£º                                                                                     
             -                                                                                                                     
2280          //      ÓÐÁËFunTypeÀàÐÍºó£¬ÎÒÃÇ¾Í¿ÉÒÔÍ¬ÑùµØ¡¢ºÜ·½±ãµØÓÃFunTypeÀàÐÍÀ´ÉêÃ÷¶à¸öÍ¬ÀàÐÍµÄº¯ÊýÖ¸Õë±äÁ¿ÁË¡£ÈçÏÂ£º     
             -                                                                                                                     
2281          //      FunType FunP2;                                                                                         
             -                                                                                                                     
2282          //      FunType FunP3;                                                                                         
             -                                                                                                                     
2283          //      //¡­¡­                                                                                                 
             -                                                                                                                     
2284          //                                                                                                             
             -                                                                                                                     
2285          //      Áù º¯ÊýÖ¸Õë×÷ÎªÄ³¸öº¯ÊýµÄ²ÎÊý                                                                          
             -                                                                                                                     
2286          //      ¼ÈÈ»º¯ÊýÖ¸Õë±äÁ¿ÊÇÒ»¸ö±äÁ¿£¬µ±È»Ò²¿ÉÒÔ×÷ÎªÄ³¸öº¯ÊýµÄ²ÎÊýÀ´Ê¹ÓÃµÄ¡£ËùÒÔ£¬Äã»¹Ó¦ÖªµÀº¯ÊýÖ¸ÕëÊÇÈçºÎ×÷ÎªÄ³¸
             -öº¯ÊýµÄ²ÎÊýÀ´´«µÝÊ¹ÓÃµÄ¡£                                                                                            
2287          //      ¸øÄãÒ»¸öÊµÀý£º                                                                                         
             -                                                                                                                     
2288          //      ÒªÇó£ºÎÒÒªÉè¼ÆÒ»¸öCallMyFunº¯Êý£¬Õâ¸öº¯Êý¿ÉÒÔÍ¨¹ý²ÎÊýÖÐµÄº¯ÊýÖ¸ÕëÖµ²»Í¬À´·Ö±ðµ÷ÓÃMyFun1¡¢MyFun2¡¢MyFun3
             -ÕâÈý¸öº¯Êý£¨×¢£ºÕâÈý¸öº¯ÊýµÄ¶¨Òå¸ñÊ½Ó¦ÏàÍ¬£©¡£                                                                       
2289          //      ÊµÏÖ£º´úÂëÈçÏÂ£º                                                                                       
             -                                                                                                                     
2290          //      //×ÔÐÐ°üº¬Í·ÎÄ¼þ                                                                                       
             -                                                                                                                     
2291          //      void MyFun1(int x);                                                                                    
             -                                                                                                                     
2292          //      void MyFun2(int x);                                                                                    
             -                                                                                                                     
2293          //      void MyFun3(int x);                                                                                    
             -                                                                                                                     
2294          //      typedef void (*FunType)(int ); //¢Ú. ¶¨ÒåÒ»¸öº¯ÊýÖ¸ÕëÀàÐÍFunType,Óë¢Ùº¯ÊýÀàÐÍÒ»ÖÁ                      
             -                                                                                                                     
2295          //      void CallMyFun(FunType fp,int x);                                                                      
             -                                                                                                                     
2296          //                                                                                                             
             -                                                                                                                     
2297          //      int main(int argc, char* argv[])                                                                       
             -                                                                                                                     
2298          //      {                                                                                                      
             -                                                                                                                     
2299          //         CallMyFun(MyFun1,10);   //¢Ý. Í¨¹ýCallMyFunº¯Êý·Ö±ðµ÷ÓÃÈý¸ö²»Í¬µÄº¯Êý                               
             -                                                                                                                     
2300          //         CallMyFun(MyFun2,20);                                                                               
             -                                                                                                                     
2301          //         CallMyFun(MyFun3,30);                                                                               
             -                                                                                                                     
2302          //      }                                                                                                      
             -                                                                                                                     
2303          //      void CallMyFun(FunType fp,int x) //¢Û. ²ÎÊýfpµÄÀàÐÍÊÇFunType¡£                                         
C51 COMPILER V7.09   MCU                                                                   04/25/2008 16:22:08 PAGE 42  

             -                                                                                                                     
2304          //      {                                                                                                      
             -                                                                                                                     
2305          //        fp(x);//¢Ü. Í¨¹ýfpµÄÖ¸ÕëÖ´ÐÐ´«µÝ½øÀ´µÄº¯Êý£¬×¢ÒâfpËùÖ¸µÄº¯ÊýÊÇÓÐÒ»¸ö²ÎÊýµÄ                           
             -                                                                                                                     
2306          //      }                                                                                                      
             -                                                                                                                     
2307          //      void MyFun1(int x) // ¢Ù. ÕâÊÇ¸öÓÐÒ»¸ö²ÎÊýµÄº¯Êý£¬ÒÔÏÂÁ½¸öº¯ÊýÒ²ÏàÍ¬                                   
             -                                                                                                                     
2308          //      {                                                                                                      
             -                                                                                                                     
2309          //         printf(¡°º¯ÊýMyFun1ÖÐÊä³ö£º%d\n¡±,x);                                                               
             -                                                                                                                     
2310          //      }                                                                                                      
             -                                                                                                                     
2311          //      void MyFun2(int x)                                                                                     
             -                                                                                                                     
2312          //      {                                                                                                      
             -                                                                                                                     
2313          //         printf(¡°º¯ÊýMyFun2ÖÐÊä³ö£º%d\n¡±,x);                                                               
             -                                                                                                                     
2314          //      }                                                                                                      
             -                                                                                                                     
2315          //      void MyFun3(int x)                                                                                     
             -                                                                                                                     
2316          //      {                                                                                                      
             -                                                                                                                     
2317          //         printf(¡°º¯ÊýMyFun3ÖÐÊä³ö£º%d\n¡±,x);                                                               
             -                                                                                                                     
2318          //      }
2319          
2320          //                                                                                                        
             -                                                                                                                   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   7001    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =    383      84
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     29       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
